{"version":3,"sources":["stitches.config.ts","Interactive.tsx","ui.tsx","StateLog.tsx","ShowOnDemo.tsx","LinkDemo.tsx","StressTest.tsx","MainDemo.tsx","DisabledEdgeCases/DisabledEdgeCases.tsx","TypeScriptExamples.tsx","App.tsx","index.tsx"],"names":["stitchesConfig","createCss","theme","colors","pageBackground","backgroundContrast","highContrast","lowContrast","red","orange","yellow","green","outlineGreen","blueGreen","blue","outlineBlue","purple","backgroundPurple","styled","keyframes","global","createGlobalCss","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","WebkitTapHighlightColor","html","height","body","fontFamily","overflowWrap","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","minHeight","backgroundColor","ButtonBase","onClick","className","children","as","outline","outlineOffset","CheckboxBase","checked","onCheckedChange","disabled","Interactive","CheckIcon","width","appearance","boxShadow","borderRadius","display","alignItems","justifyContent","LabelBase","props","Label","cursor","opacity","Link","href","target","rel","borderBottom","borderBottomStyle","variants","type","DarkModeButton","DemoContainer","DemoHeading","marginBottom","StateLogContainer","overflow","DemoButton","variantLookup","InfoType","normal","ExtendedTouchActiveOptionContainer","marginTop","OptionLabel","OptionCheckbox","flexShrink","marginRight","CodeBlock","StateLog","stateLog","setStateLog","React","useExtendedTouchActive","setUseExtendedTouchActive","logContainerElement","current","scrollTop","scrollHeight","handleInteractiveStateChange","state","prevState","prevLog","log","hover","push","active","focus","handleClick","event","eventFrom","handleDoubleClick","childrenAsAFunction","length","join","onStateChange","onDoubleClick","ref","tabIndex","map","item","idx","test","deviceType","InfoTextContainer","showInfo","false","InfoIconContainer","InteractiveInfo","Span","ShowOnDemo","setShowInfo","handleOnStateChange","scale","transform","linkCss","animation","AnchorLink","A","RouterLink","createInteractive","LinkDemo","to","StressTestHeadingContainer","StressTestHeading","ShowStressTestButton","Button","marginLeft","StressTestItem","ArrayOfInteractive","Array","fill","_","StressTest","showStressTest","setShowStressTest","MainDemoContainer","maxWidth","HeaderContainer","H1","DemoInfoText","MainDemo","darkMode","useDarkMode","undefined","classNameDark","toggle","StyledDisplayStateContainer","DisplayState","ButtonComponent","LinkComponent","DivComponent","DisabledEdgeCasesContainer","initialState","DisabledEdgeCases","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","InteractiveNav","InteractiveRouterLink","DemoCreateInteractiveAs","element","hoverStyle","Div","propsForInteractiveButton","propsForInteractiveRouterLink","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e01529.chunk.js","sourcesContent":["import { createCss, StitchesCss } from '@stitches/react';\n\nexport const stitchesConfig = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,30%)',\n      outlineGreen: 'hsl(120,40%,55%)',\n      blueGreen: 'hsl(180,100%,35%)',\n      blue: 'hsl(240,100%,50%)',\n      outlineBlue: 'hsl(240,100%,70%)',\n      purple: 'hsl(270,100%,60%)',\n      backgroundPurple: 'hsl(270,100%,92%)',\n    },\n  },\n});\n\nexport type CSS = StitchesCss<typeof stitchesConfig>;\n\nexport const {\n  styled,\n  theme,\n  keyframes,\n  global: createGlobalCss,\n} = stitchesConfig;\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    outlineGreen: 'hsl(120,80%,30%)',\n    blueGreen: 'hsl(180,100%,50%)',\n    blue: 'hsl(210,100%,60%)',\n    outlineBlue: 'hsl(210,80%,40%)',\n    purple: 'hsl(270,85%,60%)',\n    backgroundPurple: 'hsl(270,100%,15%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  'button, input, a, span': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input, ul, li': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    overflowWrap: 'anywhere',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { Interactive, InteractiveExtendableProps } from 'react-interactive';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport * as Label from '@radix-ui/react-label';\nimport { SunIcon, CheckIcon } from '@radix-ui/react-icons';\nimport { styled } from './stitches.config';\n\n////////////////////////////////////////\n\ninterface InteractiveButtonProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = ({\n  onClick,\n  className,\n  children,\n}) => (\n  <Interactive as=\"button\" className={className} onClick={onClick}>\n    {children}\n  </Interactive>\n);\nexport const ButtonBase = styled(InteractiveButton, {\n  color: '$highContrast',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\n////////////////////////////////////////\n\n// checkbox and label usage:\n// <LabelBase disabled={disabled}>\n//   <CheckboxBase\n//     disabled={disabled}\n//     checked={checked}\n//     onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n//       setChecked(event.target.checked)\n//     }\n//   />\n//   Label text here\n//  </LabelBase>\n\ninterface InteractiveCheckboxProps {\n  checked: boolean;\n  onCheckedChange: React.ChangeEventHandler<HTMLInputElement>;\n  className?: string;\n  disabled?: boolean;\n}\n\nconst InteractiveCheckbox: React.VFC<InteractiveCheckboxProps> = ({\n  checked,\n  onCheckedChange,\n  className,\n  disabled,\n}) => (\n  <Checkbox.Root\n    as={Interactive}\n    checked={checked}\n    onCheckedChange={onCheckedChange}\n    className={className}\n    disabled={disabled}\n  >\n    <Checkbox.Indicator as={CheckIcon} width=\"30\" height=\"30\" />\n  </Checkbox.Root>\n);\n\nexport const CheckboxBase = styled(InteractiveCheckbox, {\n  appearance: 'none',\n  backgroundColor: 'transparent',\n  boxShadow: 'inset 0 0 0 1px $colors$highContrast',\n  width: '30px',\n  height: '30px',\n  borderRadius: '2px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // hover and active are styled in LabelBase so styles are applied when label is hovered/active\n  // '&.hover, &.active': {...},\n  '&.focusFromKey': {\n    outline: 'none',\n    boxShadow: 'inset 0 0 0 1px $colors$purple, 0 0 0 1px $colors$purple',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n});\n\nconst InteractiveLabel: React.VFC<\n  InteractiveExtendableProps<typeof Label.Root>\n> = (props) => <Interactive {...props} as={Label.Root} />;\n\nexport const LabelBase = styled(InteractiveLabel, {\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  // style CheckboxBase (which renders a button) when label is hovered/active\n  '&.hover>button, &.mouseActive>button': {\n    color: '$green',\n    boxShadow: 'inset 0 0 0 1px $colors$green, 0 0 0 1px $colors$green',\n  },\n  '&.touchActive>button': {\n    color: '$blue',\n    boxShadow: 'inset 0 0 0 1px $colors$blue, 0 0 0 1px $colors$blue',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n  // required because of radix checkbox bug: https://github.com/radix-ui/primitives/issues/605\n  '&>input': {\n    display: 'none',\n  },\n});\n\n////////////////////////////////////////\n\ninterface InteractiveLinkProps {\n  href: string;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = ({\n  href,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive\n      as=\"a\"\n      href={href}\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </Interactive>\n  );\n};\nexport const Link = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '1px dotted $colors$green',\n  textDecoration: 'none',\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\n////////////////////////////////////////\n\ninterface DarkModeButtonBaseProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\nconst DarkModeButtonBase: React.VFC<DarkModeButtonBaseProps> = ({\n  onClick,\n  className,\n}) => (\n  <ButtonBase className={className} onClick={onClick}>\n    <SunIcon width=\"30\" height=\"30\" />\n  </ButtonBase>\n);\nexport const DarkModeButton = styled(DarkModeButtonBase, {\n  width: '30px',\n  height: '30px',\n});\n\n////////////////////////////////////////\n","import { styled } from './stitches.config';\n\nexport const DemoContainer = styled('div', {\n  margin: '24px 0',\n});\n\nexport const DemoHeading = styled('h2', {\n  fontSize: '22px',\n  marginBottom: '10px',\n});\n","import * as React from 'react';\nimport { deviceType } from 'detect-it';\nimport {\n  Interactive,\n  eventFrom,\n  InteractiveExtendableProps,\n  InteractiveState,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport { CheckboxBase, LabelBase } from './Interactive';\nimport { DemoContainer, DemoHeading } from './ui';\nimport { styled } from './stitches.config';\n\nconst StateLogContainer = styled('div', {\n  height: '200px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflow: 'scroll',\n  fontFamily: 'monospace',\n  outline: 'none',\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst InteractiveButton: React.VFC<InteractiveExtendableProps<'button'>> = (\n  props,\n) => <Interactive {...props} as=\"button\" />;\n\nconst DemoButton = styled(InteractiveButton, {\n  fontFamily: 'monospace',\n  fontSize: '20px',\n  textAlign: 'center',\n  width: '100%',\n  minHeight: '50px',\n  border: '1px solid',\n  marginBottom: '5px',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromTouch': {\n    outline: '3px solid $colors$outlineBlue',\n    outlineOffset: '1px',\n  },\n  '&.focusFromMouse': {\n    outline: '3px solid $colors$outlineGreen',\n    outlineOffset: '1px',\n  },\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst variantLookup: Record<string, any> = {\n  'hover: true': 'green',\n  'hover: false': 'normal',\n  'active: mouseActive': 'green',\n  'active: touchActive': 'blue',\n  'active: keyActive': 'purple',\n  'active: false': 'normal',\n  'focus: focusFromMouse': 'green',\n  'focus: focusFromTouch': 'blue',\n  'focus: focusFromKey': 'purple',\n  'focus: false': 'normal',\n};\n\nconst InfoType = styled('span', {\n  color: '$lowContrast',\n  variants: {\n    type: {\n      normal: { color: '$lowContrast' },\n      green: { color: '$green' },\n      blue: { color: '$blue' },\n      purple: { color: '$purple' },\n      orange: { color: '$orange' },\n    },\n  },\n});\n\nconst ExtendedTouchActiveOptionContainer = styled('div', {\n  marginTop: '10px',\n});\n\nconst OptionLabel = styled(LabelBase, {\n  display: 'inline-flex',\n  alignItems: 'center',\n  fontSize: '18px',\n});\n\nconst OptionCheckbox = styled(CheckboxBase, {\n  flexShrink: 0,\n  marginRight: '4px',\n});\n\nconst CodeBlock = styled('code', {\n  backgroundColor: '$backgroundContrast',\n  marginTop: '2px',\n  padding: '4px 6px 4px',\n  borderRadius: '5px',\n});\n\nexport const StateLog: React.VFC = () => {\n  const [stateLog, setStateLog] = React.useState<string[]>([]);\n  const [\n    useExtendedTouchActive,\n    setUseExtendedTouchActive,\n  ] = React.useState<boolean>(false);\n\n  const logContainerElement = React.useRef<HTMLDivElement>(null!);\n\n  React.useEffect(() => {\n    if (logContainerElement.current) {\n      logContainerElement.current.scrollTop =\n        logContainerElement.current.scrollHeight;\n    }\n  }, [stateLog]);\n\n  const handleInteractiveStateChange = React.useCallback(\n    ({ state, prevState }: InteractiveStateChange) => {\n      setStateLog((prevLog) => {\n        const log = [...prevLog];\n        if (state.hover !== prevState.hover) {\n          log.push(`hover: ${state.hover}`);\n        }\n        if (state.active !== prevState.active) {\n          log.push(`active: ${state.active}`);\n        }\n        if (state.focus !== prevState.focus) {\n          log.push(`focus: ${state.focus}`);\n        }\n        return log;\n      });\n    },\n    [],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const handleDoubleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `double click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const childrenAsAFunction = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) => {\n      const children: string[] = [];\n      if (hover) {\n        children.push('hover');\n      }\n      if (active) {\n        children.push(active);\n      }\n      if (focus) {\n        children.push(focus);\n      }\n      if (children.length === 0) {\n        children.push('normal');\n      }\n      return children.join(', ');\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer>\n      <DemoHeading>Interactive State Log</DemoHeading>\n      <DemoButton\n        onStateChange={handleInteractiveStateChange}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        useExtendedTouchActive={useExtendedTouchActive}\n      >\n        {childrenAsAFunction}\n      </DemoButton>\n      <Interactive\n        as={StateLogContainer}\n        ref={logContainerElement}\n        tabIndex={0}\n      >\n        {stateLog.map((item, idx) => (\n          <div key={idx}>\n            <InfoType>{idx + 1}</InfoType>{' '}\n            <InfoType\n              type={/click/.test(item) ? 'orange' : variantLookup[item]}\n            >\n              {item}\n            </InfoType>\n          </div>\n        ))}\n      </Interactive>\n      {deviceType !== 'mouseOnly' ? (\n        <ExtendedTouchActiveOptionContainer>\n          <OptionLabel>\n            <OptionCheckbox\n              checked={useExtendedTouchActive}\n              onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setUseExtendedTouchActive(event.target.checked)\n              }\n            />\n            <CodeBlock>useExtendedTouchActive</CodeBlock>\n          </OptionLabel>\n        </ExtendedTouchActiveOptionContainer>\n      ) : null}\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveStateChange } from 'react-interactive';\nimport { InfoCircledIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from './ui';\nimport { styled } from './stitches.config';\n\nconst InfoTextContainer = styled('div', {\n  textAlign: 'center',\n  fontSize: 18,\n  margin: 16,\n  variants: {\n    showInfo: {\n      false: {\n        color: '$lowContrast',\n      },\n    },\n  },\n});\n\nconst InfoIconContainer = styled('div', {\n  textAlign: 'center',\n});\n\nconst InteractiveInfo = styled(Interactive.Span, {\n  height: 30,\n  display: 'inline-block',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.focusFromKey': {\n    color: '$purple',\n  },\n});\n\nexport const ShowOnDemo: React.VFC = () => {\n  const [showInfo, setShowInfo] = React.useState(false);\n\n  const handleOnStateChange = React.useCallback(\n    ({ state }: InteractiveStateChange) => {\n      setShowInfo(\n        state.hover ||\n          state.active === 'touchActive' ||\n          state.focus === 'focusFromKey',\n      );\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer>\n      <DemoHeading>Show On</DemoHeading>\n      <InfoTextContainer showInfo={showInfo}>\n        {showInfo ? (\n          'Some info to show about something'\n        ) : (\n          <>\n            <code>hover</code>, <code>touchActive</code>, and{' '}\n            <code>focusFromKey</code>\n          </>\n        )}\n      </InfoTextContainer>\n      <InfoIconContainer>\n        <InteractiveInfo tabIndex={0} onStateChange={handleOnStateChange}>\n          <InfoCircledIcon width={30} height={30} />\n        </InteractiveInfo>\n      </InfoIconContainer>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, createInteractive } from 'react-interactive';\nimport { Link } from 'react-router-dom';\nimport { DemoContainer, DemoHeading } from './ui';\nimport { styled, keyframes, CSS } from './stitches.config';\n\nconst scale = keyframes({\n  '0%': { transform: 'scale(1)' },\n  '50%': { transform: 'scale(1.03)' },\n  '100%': { transform: 'scale(1)' },\n});\n\nconst linkCss: CSS = {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  padding: '4px 5px 3px',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    animation: `${scale} 500ms`,\n    backgroundColor: '$backgroundPurple',\n    padding: '3px 4px 2px',\n    border: '1px solid $colors$purple',\n    borderRadius: '3px',\n    textDecoration: 'none',\n  },\n};\n\nconst AnchorLink = styled(Interactive.A, linkCss);\nconst RouterLink = styled(createInteractive(Link), linkCss);\n\nexport const LinkDemo: React.VFC = () => {\n  return (\n    <DemoContainer>\n      <DemoHeading>Links</DemoHeading>\n      <AnchorLink href=\"#\">\n        Anchor tag link – <code>as=\"a\" href=\"#\"</code>\n      </AnchorLink>\n      <RouterLink to=\"/\">\n        React Router link – <code>{'as={Link} to=\"/\"'}</code>\n      </RouterLink>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { DemoContainer, DemoHeading } from './ui';\nimport { styled } from './stitches.config';\n\nconst StressTestHeadingContainer = styled('div', {\n  marginBottom: 10,\n});\n\nconst StressTestHeading = styled(DemoHeading, {\n  display: 'inline-block',\n  marginBottom: 0,\n  marginRight: 8,\n});\n\nconst ShowStressTestButton = styled(Interactive.Button, {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  padding: '4px 5px 3px',\n  marginLeft: '3px',\n\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    backgroundColor: '$backgroundPurple',\n    padding: '3px 4px 2px',\n    border: '1px solid $colors$purple',\n    borderRadius: '3px',\n    textDecoration: 'none',\n  },\n});\n\nconst StressTestItem = styled(Interactive.Button, {\n  display: 'block',\n  width: '100%',\n  fontFamily: 'monospace',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n  },\n});\n\nconst ArrayOfInteractive = Array(500)\n  .fill(1)\n  .map((_, idx) => (\n    <StressTestItem key={idx} useExtendedTouchActive>\n      {({ hover, active }: InteractiveState) =>\n        `Interactive button ${idx + 1}${hover || active ? ' - ' : ''}${\n          hover ? 'hover' : ''\n        }${hover && active ? ', ' : ''}${active ? active : ''}`\n      }\n    </StressTestItem>\n  ));\n\nexport const StressTest: React.VFC = () => {\n  const [showStressTest, setShowStressTest] = React.useState<boolean>(false);\n\n  return (\n    <DemoContainer>\n      <StressTestHeadingContainer>\n        <StressTestHeading>Stress Test</StressTestHeading>–\n        <ShowStressTestButton\n          onClick={() => setShowStressTest((prevState) => !prevState)}\n        >\n          {`${showStressTest ? 'remove' : 'create'}`} 500 Interactive buttons\n        </ShowStressTestButton>\n      </StressTestHeadingContainer>\n      {showStressTest ? ArrayOfInteractive : null}\n    </DemoContainer>\n  );\n};\n","import useDarkMode from 'use-dark-mode';\nimport { StateLog } from './StateLog';\nimport { ShowOnDemo } from './ShowOnDemo';\nimport { LinkDemo } from './LinkDemo';\nimport { StressTest } from './StressTest';\nimport { styled, darkThemeClass } from './stitches.config';\nimport { Link, DarkModeButton } from './Interactive';\n\nconst MainDemoContainer = styled('div', {\n  maxWidth: '500px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst HeaderContainer = styled('header', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  marginRight: '6px',\n});\n\nconst DemoInfoText = styled('p', {\n  color: '$lowContrast',\n  margin: '12px 0',\n});\n\nexport const MainDemo = () => {\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  return (\n    <MainDemoContainer>\n      <HeaderContainer>\n        <H1>React Interactive Demo</H1>\n        <DarkModeButton onClick={darkMode.toggle} />\n      </HeaderContainer>\n      <Link\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </Link>\n      <DemoInfoText>\n        Try out this demo on both mouse and touch devices, and test the keyboard\n        navigation too!\n      </DemoInfoText>\n      <StateLog />\n      <ShowOnDemo />\n      <LinkDemo />\n      <StressTest />\n    </MainDemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../Interactive';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCases.css';\n\nconst StyledDisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <StyledDisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </StyledDisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCasesContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCases: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCasesContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCasesContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  createInteractive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from './stitches.config';\n\n// TS demos in this file:\n// <DemoCreateInteractiveAs />\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// using createInteractive(as) to extend <Interactive>\n// and predefined Interactive.Tagname components\n\nconst InteractiveNav = createInteractive('nav');\nconst InteractiveRouterLink = createInteractive(Link);\n\nexport const DemoCreateInteractiveAs: React.VFC = () => (\n  <>\n    <Interactive.Button\n      // as=\"button\" // should error\n      type=\"submit\" // button specific prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      // foo // should error\n    >\n      Interactive.Button\n    </Interactive.Button>\n    <Interactive.A\n      // as=\"a\" // should error\n      href=\"https://rafgraph.dev\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive.A\n    </Interactive.A>\n    <Interactive.Div\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      Interactive.Div\n    </Interactive.Div>\n    <InteractiveNav\n      // as=\"nav\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveNav\n    </InteractiveNav>\n    <InteractiveRouterLink\n      // as={Link} // should error\n      to=\"/some-path\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveRouterLink\n    </InteractiveRouterLink>\n  </>\n);\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoCreateInteractiveAs />\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { MainDemo } from './MainDemo';\nimport { DisabledEdgeCases } from './DisabledEdgeCases/DisabledEdgeCases';\nimport { TypeScriptExamples } from './TypeScriptExamples';\n\nexport const App = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route path=\"/disabled-edge-cases\" component={DisabledEdgeCases} />\n        <Route component={MainDemo} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}