{"version":3,"sources":["stitches.config.ts","ui/DemoContainer.tsx","demos/StateLog.tsx","demos/ShowOn.tsx","ui/Link.tsx","demos/Links.tsx","demos/FormElements.tsx","demos/CssStickyHoverBug.tsx","demos/StressTest.tsx","ui/Button.tsx","ui/GitHubIconLink.tsx","ui/DarkModeButton.tsx","App.tsx","other/DisabledEdgeCase.tsx","other/PageJumpEdgeCase.tsx","other/TypeScriptExamples.tsx","index.tsx"],"names":["stitchesConfig","createCss","theme","colors","pageBackground","backgroundContrast","highContrast","lowContrast","formElementsBackground","red","orange","yellow","green","outlineGreen","blue","outlineBlue","purple","backgroundPurple","styled","keyframes","global","createGlobalCss","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","lineHeight","wordBreak","color","background","WebkitTapHighlightColor","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","height","minHeight","backgroundColor","DemoContainer","paddingBottom","borderBottom","DemoHeading","marginBottom","StateLogContainer","overflowY","outline","outlineOffset","DemoButton","props","as","width","variantLookup","InfoType","variants","type","normal","ExtendedTouchActiveOptionContainer","marginTop","ExtendedTouchActiveOptionLabel","createInteractive","Label","cursor","display","alignItems","verticalAlign","borderColor","boxShadow","opacity","ExtendedTouchActiveOptionCheckbox","Checkbox","flexShrink","marginRight","appearance","borderRadius","CodeBlock","StateLog","stateLog","setStateLog","React","useExtendedTouchActive","setUseExtendedTouchActive","logContainerElement","current","scrollTop","scrollHeight","handleInteractiveStateChange","state","prevState","prevLog","log","hover","push","active","focus","handleClick","event","eventFrom","handleDoubleClick","childrenAsAFunction","children","length","join","id","onStateChange","onClick","onDoubleClick","ref","tabIndex","map","item","idx","test","deviceType","checked","onCheckedChange","target","CheckIcon","ShowOnDemoHeading","InfoTextContainer","justifyContent","showInfo","false","InfoIconContainer","InteractiveInfo","Interactive","Span","ShowOn","setShowInfo","handleOnStateChange","StyledLink","A","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","defaultVariants","Link","newWindow","undefined","rel","scale","transform","linkCss","animation","AnchorLink","RouterLink","ReactRouterLink","P","Links","href","to","TextInput","Input","CheckboxLabel","RadixLabel","RadixCheckbox","SelectContainer","gridTemplateAreas","content","gridArea","justifySelf","clipPath","pointerEvents","disabled","true","Select","Button","Ocean","position","top","bottom","left","right","zIndex","Fish","filter","createOneFish","Math","floor","random","FormElements","textInputState","setTextInputState","textInputInputText","setTextInputInfoText","checkboxState","setCheckboxState","anotherCheckboxState","setAnotherCheckboxState","selectInputState","setSelectInputState","disableElements","setDisabledElements","fishes","setFishes","createNewFishes","newFishes","Array","fill","_","intervalId","window","setInterval","primaryInput","clearInterval","value","onChange","e","infoText","placeholder","onMouseDown","hidden","fish","css","f","CssButton","InteractiveButton","ButtonsContainer","gap","CssStickyHoverBug","StressTestHeadingContainer","stressTestShown","StressTestHeading","ShowStressTestButton","marginLeft","StressTestItem","ArrayOfInteractive","StressTest","showStressTest","setShowStressTest","GitHubIconLink","style","DarkModeButton","storageProvider","localStorage","darkMode","useDarkMode","classNameDark","document","documentElement","colorScheme","toggle","aria-label","AppContainer","maxWidth","HeaderContainer","H1","HeaderIconContainer","App","DisplayStateContainer","DisplayState","ButtonComponent","LinkComponent","DivComponent","DisabledEdgeCaseContainer","initialState","DisabledEdgeCase","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","className","PageJumpEdgeCaseContainer","interactiveStyles","InteractiveLink","InteractiveDiv","Div","PageJumpEdgeCase","jumpPage","setJumpPage","interactiveChildren","InteractiveNav","InteractiveRouterLink","DemoCreateInteractiveAs","element","hoverStyle","propsForInteractiveButton","propsForInteractiveRouterLink","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","Index","exact","path","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1f4ef8b1.chunk.js","sourcesContent":["import { createCss, StitchesCss } from '@stitches/react';\n\nexport const stitchesConfig = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      formElementsBackground: 'rgb(250,250,250)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,30%)',\n      outlineGreen: 'hsl(120,40%,55%)',\n      blue: 'hsl(240,100%,50%)',\n      outlineBlue: 'hsl(240,100%,70%)',\n      purple: 'hsl(270,100%,60%)',\n      backgroundPurple: 'hsl(270,100%,92%)',\n    },\n  },\n});\n\nexport type CSS = StitchesCss<typeof stitchesConfig>;\n\nexport const {\n  styled,\n  theme,\n  keyframes,\n  global: createGlobalCss,\n} = stitchesConfig;\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    formElementsBackground: 'rgb(20,20,20)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    outlineGreen: 'hsl(120,80%,30%)',\n    blue: 'hsl(210,100%,60%)',\n    outlineBlue: 'hsl(210,80%,40%)',\n    purple: 'hsl(270,85%,60%)',\n    backgroundPurple: 'hsl(270,100%,15%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  // unset all styles on interactive elements\n  'button, input, select, textarea, a, area': {\n    all: 'unset',\n  },\n  // normalize behavior on all elements\n  '*, *::before, *::after, button, input, select, textarea, a, area': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    lineHeight: 'inherit',\n    wordBreak: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  // set base styles for the app\n  body: {\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    // use word-break instead of \"overflow-wrap: anywhere\" because of Safari support\n    wordBreak: 'break-word',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n    lineHeight: '16px',\n  },\n  // pass down height: 100% to the #root div\n  'body, html': {\n    height: '100%',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { styled } from '../stitches.config';\n\nexport const DemoContainer = styled('div', {\n  margin: '20px 0',\n  paddingBottom: '30px',\n  borderBottom: '1px dotted $lowContrast',\n});\n\nexport const DemoHeading = styled('h2', {\n  fontSize: '22px',\n  marginBottom: '10px',\n});\n","import * as React from 'react';\nimport { deviceType } from 'detect-it';\nimport {\n  Interactive,\n  createInteractive,\n  eventFrom,\n  InteractiveExtendableProps,\n  InteractiveState,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport * as Label from '@radix-ui/react-label';\nimport { CheckIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst StateLogContainer = styled('div', {\n  height: '200px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflowY: 'scroll',\n  fontFamily: 'monospace',\n  outline: 'none',\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst InteractiveButton: React.VFC<InteractiveExtendableProps<'button'>> = (\n  props,\n) => <Interactive {...props} as=\"button\" />;\n\nconst DemoButton = styled(InteractiveButton, {\n  fontFamily: 'monospace',\n  fontSize: '20px',\n  textAlign: 'center',\n  width: '100%',\n  minHeight: '50px',\n  border: '1px solid',\n  marginBottom: '5px',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromTouch': {\n    outline: '3px solid $colors$outlineBlue',\n    outlineOffset: '1px',\n  },\n  '&.focusFromMouse': {\n    outline: '3px solid $colors$outlineGreen',\n    outlineOffset: '1px',\n  },\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst variantLookup: Record<string, any> = {\n  'hover: true': 'green',\n  'hover: false': 'normal',\n  'active: mouseActive': 'green',\n  'active: touchActive': 'blue',\n  'active: keyActive': 'purple',\n  'active: false': 'normal',\n  'focus: focusFromMouse': 'green',\n  'focus: focusFromTouch': 'blue',\n  'focus: focusFromKey': 'purple',\n  'focus: false': 'normal',\n};\n\nconst InfoType = styled('span', {\n  color: '$lowContrast',\n  variants: {\n    type: {\n      normal: { color: '$lowContrast' },\n      green: { color: '$green' },\n      blue: { color: '$blue' },\n      purple: { color: '$purple' },\n      orange: { color: '$orange' },\n    },\n  },\n});\n\nconst ExtendedTouchActiveOptionContainer = styled('div', {\n  marginTop: '10px',\n});\n\nconst ExtendedTouchActiveOptionLabel = styled(createInteractive(Label.Root), {\n  cursor: 'pointer',\n  fontSize: '18px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  // required to set vertical-align because display is inline\n  // and it contains an empty button (the checkbox when un-checked)\n  // see https://stackoverflow.com/questions/21645695/button-element-without-text-causes-subsequent-buttons-to-be-positioned-wrong\n  verticalAlign: 'top',\n\n  // style Checkbox (which renders a button) when label is hovered/active\n  '&.hover>button, &.mouseActive>button': {\n    color: '$green',\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.touchActive>button': {\n    color: '$blue',\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n  // required because of radix checkbox bug: https://github.com/radix-ui/primitives/issues/605\n  '&>input': {\n    display: 'none',\n  },\n});\n\nconst ExtendedTouchActiveOptionCheckbox = styled(\n  createInteractive(Checkbox.Root),\n  {\n    flexShrink: 0,\n    marginRight: '4px',\n    appearance: 'none',\n    border: '1px solid $highContrast',\n    width: '32px',\n    height: '32px',\n    borderRadius: '2px',\n    // hover and active are styled in LabelBase so styles are applied when label is hovered/active\n    // '&.hover, &.active': {...},\n    '&.focusFromKey': {\n      outline: 'none',\n      // !important required so hover and active styles from Label are not applied\n      // to border and boxShadow when in the focusFromKey state\n      borderColor: '$purple !important',\n      boxShadow: '0 0 0 1px $colors$purple !important',\n    },\n    '&.keyActive': {\n      color: '$purple',\n    },\n  },\n);\n\nconst CodeBlock = styled('code', {\n  backgroundColor: '$backgroundContrast',\n  marginTop: '2px',\n  padding: '4px 6px 4px',\n  borderRadius: '5px',\n});\n\nexport const StateLog: React.VFC = () => {\n  const [stateLog, setStateLog] = React.useState<string[]>([]);\n  const [\n    useExtendedTouchActive,\n    setUseExtendedTouchActive,\n  ] = React.useState<boolean>(false);\n\n  const logContainerElement = React.useRef<HTMLDivElement>(null!);\n\n  React.useEffect(() => {\n    if (logContainerElement.current) {\n      logContainerElement.current.scrollTop =\n        logContainerElement.current.scrollHeight;\n    }\n  }, [stateLog]);\n\n  const handleInteractiveStateChange = React.useCallback(\n    ({ state, prevState }: InteractiveStateChange) => {\n      setStateLog((prevLog) => {\n        const log = [...prevLog];\n        if (state.hover !== prevState.hover) {\n          log.push(`hover: ${state.hover}`);\n        }\n        if (state.active !== prevState.active) {\n          log.push(`active: ${state.active}`);\n        }\n        if (state.focus !== prevState.focus) {\n          log.push(`focus: ${state.focus}`);\n        }\n        return log;\n      });\n    },\n    [],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const handleDoubleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `double click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const childrenAsAFunction = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) => {\n      const children: string[] = [];\n      if (hover) {\n        children.push('hover');\n      }\n      if (active) {\n        children.push(active);\n      }\n      if (focus) {\n        children.push(focus);\n      }\n      if (children.length === 0) {\n        children.push('normal');\n      }\n      return children.join(', ');\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer id=\"interactive-state-log\">\n      <DemoHeading>Interactive State Log</DemoHeading>\n      <DemoButton\n        onStateChange={handleInteractiveStateChange}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        useExtendedTouchActive={useExtendedTouchActive}\n      >\n        {childrenAsAFunction}\n      </DemoButton>\n      <Interactive\n        as={StateLogContainer}\n        ref={logContainerElement}\n        tabIndex={0}\n      >\n        {stateLog.map((item, idx) => (\n          <div key={idx}>\n            <InfoType>{idx + 1}</InfoType>{' '}\n            <InfoType\n              type={/click/.test(item) ? 'orange' : variantLookup[item]}\n            >\n              {item}\n            </InfoType>\n          </div>\n        ))}\n      </Interactive>\n      {deviceType !== 'mouseOnly' ? (\n        <ExtendedTouchActiveOptionContainer>\n          <ExtendedTouchActiveOptionLabel>\n            <ExtendedTouchActiveOptionCheckbox\n              checked={useExtendedTouchActive}\n              onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setUseExtendedTouchActive(event.target.checked)\n              }\n            >\n              <Checkbox.Indicator as={CheckIcon} width=\"30\" height=\"30\" />\n            </ExtendedTouchActiveOptionCheckbox>\n            <CodeBlock>useExtendedTouchActive</CodeBlock>\n          </ExtendedTouchActiveOptionLabel>\n        </ExtendedTouchActiveOptionContainer>\n      ) : null}\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveStateChange } from 'react-interactive';\nimport { InfoCircledIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst ShowOnDemoHeading = styled(DemoHeading, {\n  marginBottom: 0,\n});\n\nconst InfoTextContainer = styled('div', {\n  fontSize: 18,\n  height: 52,\n  marginBottom: 4,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '&>*': {\n    textAlign: 'center',\n  },\n  variants: {\n    showInfo: {\n      false: {\n        color: '$lowContrast',\n      },\n    },\n  },\n});\n\nconst InfoIconContainer = styled('div', {\n  textAlign: 'center',\n});\n\nconst InteractiveInfo = styled(Interactive.Span, {\n  height: 30,\n  display: 'inline-block',\n  verticalAlign: 'top',\n  outline: 'none',\n  borderRadius: '50%',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.focusFromKey': {\n    color: '$purple',\n  },\n});\n\nexport const ShowOn: React.VFC = () => {\n  const [showInfo, setShowInfo] = React.useState(false);\n\n  const handleOnStateChange = React.useCallback(\n    ({ state }: InteractiveStateChange) => {\n      setShowInfo(\n        state.hover ||\n          state.active === 'touchActive' ||\n          state.focus === 'focusFromKey',\n      );\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer id=\"show-on\">\n      <ShowOnDemoHeading>Show On</ShowOnDemoHeading>\n      <InfoTextContainer showInfo={showInfo}>\n        <span>\n          {showInfo ? (\n            'Some info to show about something'\n          ) : (\n            <>\n              <code>hover</code>, <code>touchActive</code>, and{' '}\n              <code>focusFromKey</code>\n            </>\n          )}\n        </span>\n      </InfoTextContainer>\n      <InfoIconContainer>\n        <InteractiveInfo\n          onStateChange={handleOnStateChange}\n          useExtendedTouchActive\n          tabIndex={0}\n        >\n          <InfoCircledIcon width={30} height={30} />\n        </InteractiveInfo>\n      </InfoIconContainer>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nconst StyledLink = styled(Interactive.A, {\n  color: '$highContrast',\n\n  // can't use shorthand for textDecoration because of bug in Safari v14\n  // textDecoration: 'underline $colors$green dotted from-font',\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'dotted',\n  textDecorationColor: '$green',\n  textDecorationThickness: 'from-font',\n\n  '&.hover': {\n    textDecorationColor: '$green',\n    textDecorationStyle: 'solid',\n  },\n  '&.touchActive': {\n    textDecorationColor: '$blue',\n    textDecorationStyle: 'solid',\n  },\n  '&.keyActive': {\n    textDecorationColor: '$purple',\n    textDecorationStyle: 'solid',\n  },\n  variants: {\n    focus: {\n      outline: {\n        '&.focusFromKey': {\n          outline: '2px solid $colors$purple',\n          outlineOffset: '2px',\n        },\n      },\n      boxShadow: {\n        // padding used to provide offset for boxShadow\n        // margin undoes padding for page layout so boxShadow works like outline\n        padding: '2px 3px',\n        margin: '-2px -3px',\n\n        // this is the main reason to use boxShadow instead of outline\n        // with outline can only have square corners,\n        // with boxShadow can use borderRadius to soften the corners\n        borderRadius: '3px',\n\n        '&.focusFromKey': {\n          boxShadow: '0 0 0 2px $colors$purple',\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    focus: 'boxShadow',\n  },\n});\n\ninterface LinkProps extends React.ComponentPropsWithoutRef<typeof StyledLink> {\n  newWindow?: boolean;\n}\n\nexport const Link: React.VFC<LinkProps> = ({ newWindow = true, ...props }) => (\n  <StyledLink\n    {...props}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n  />\n);\n","import * as React from 'react';\nimport { Interactive, createInteractive } from 'react-interactive';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { Link } from '../ui/Link';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled, keyframes, CSS } from '../stitches.config';\n\nconst scale = keyframes({\n  '0%': { transform: 'scale(1)' },\n  '50%': { transform: 'scale(1.03)' },\n  '100%': { transform: 'scale(1)' },\n});\n\nconst linkCss: CSS = {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  borderRadius: '3px',\n  padding: '3px 4px 2px',\n  margin: '1px -4px',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    animation: `${scale} 500ms`,\n    textDecoration: 'none',\n    backgroundColor: '$backgroundPurple',\n    boxShadow: '0 0 0 1px $colors$purple',\n    // adds a 3D drop shadow as well\n    // boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n};\n\nconst AnchorLink = styled(Interactive.A, linkCss);\nconst RouterLink = styled(createInteractive(ReactRouterLink), linkCss);\n\nconst P = styled('p', {\n  marginTop: '10px',\n});\n\nexport const Links: React.VFC = () => {\n  return (\n    <DemoContainer id=\"links\">\n      <DemoHeading>Links</DemoHeading>\n      <AnchorLink href=\"#\">\n        Anchor tag link – <code>as=\"a\" href=\"#\"</code>\n      </AnchorLink>\n      <RouterLink to=\"/\">\n        React Router link – <code>{'as={Link} to=\"/\"'}</code>\n      </RouterLink>\n      <P>\n        Another{' '}\n        <Link href=\"#\" newWindow={false}>\n          link with different styling\n        </Link>{' '}\n        that appears in the middle of some text.\n      </P>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  createInteractive,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport { primaryInput } from 'detect-it';\nimport * as RadixCheckbox from '@radix-ui/react-checkbox';\nimport * as RadixLabel from '@radix-ui/react-label';\nimport { CheckIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst TextInput = styled(Interactive.Input, {\n  display: 'block',\n  width: '100%',\n  margin: '8px 0',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid $colors$highContrast',\n  borderRadius: '4px',\n  padding: '4px 6px',\n\n  '&.hover, &.mouseActive': {\n    borderColor: '$green',\n  },\n  '&.touchActive': {\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.focusFromTouch': {\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.focusFromMouse': {\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.focusFromKey': {\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n  },\n});\n\nconst CheckboxLabel = styled(createInteractive(RadixLabel.Root), {\n  cursor: 'pointer',\n  margin: '6px 1px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  // line-height needs to be the same as (or less than) the height of the checkbox\n  // for the check mark to center vertically inside the checkbox\n  lineHeight: '17px',\n  // need to set vertical-align property because display is inline\n  // and it contains an empty button (the checkbox when un-checked)\n  // see https://stackoverflow.com/questions/21645695/button-element-without-text-causes-subsequent-buttons-to-be-positioned-wrong\n  verticalAlign: 'top',\n\n  // style the <Checkbox> (which renders a button) when label is hovered/active\n  '&.hover>button': {\n    color: '$green',\n    borderColor: '$green',\n    backgroundColor: '$formElementsBackground',\n  },\n  '&.mouseActive>button': {\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.touchActive>button': {\n    color: '$blue',\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n  // required because of radix checkbox bug: https://github.com/radix-ui/primitives/issues/605\n  '&>input': {\n    display: 'none',\n  },\n});\n\nconst Checkbox = styled(createInteractive(RadixCheckbox.Root), {\n  width: '17px',\n  height: '17px',\n  flexShrink: 0,\n  marginRight: '4px',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid $highContrast',\n  borderRadius: '2px',\n\n  // hover and active styles in LabelBase so styles are applied when label is hovered/active\n  // '&.hover, &.active': {...},\n  '&.focusFromKey': {\n    // !important required so hover and active styles from Label are not applied\n    // to border and boxShadow when in the focusFromKey state\n    borderColor: '$purple !important',\n    boxShadow:\n      '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38) !important',\n  },\n  '&.keyActive': {\n    color: '$purple',\n    boxShadow:\n      '0 0 0 1px $colors$purple, 1px 2px 3px 0px rgba(0, 0, 0, 0.38) !important',\n  },\n});\n\n// select css styling adapted from https://moderncss.dev/custom-select-styles-with-pure-css/\nconst SelectContainer = styled('div', {\n  display: 'grid',\n  gridTemplateAreas: '\"select\"',\n  alignItems: 'center',\n  margin: '8px 0',\n  // select custom arrow created with clip-path\n  '&::after': {\n    content: '',\n    gridArea: 'select',\n    justifySelf: 'end',\n    width: '14px',\n    height: '8px',\n    marginRight: '8px',\n    backgroundColor: '$highContrast',\n    clipPath: 'polygon(100% 0%, 50% 35%, 0 0%, 50% 100%)',\n    pointerEvents: 'none',\n  },\n  variants: {\n    disabled: {\n      true: { opacity: 0.5 },\n    },\n  },\n});\n\nconst Select = styled(Interactive.Select, {\n  gridArea: 'select',\n  width: '100%',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid $colors$highContrast',\n  borderRadius: '4px',\n  padding: '4px 24px 4px 6px',\n\n  '&.hover': {\n    borderColor: '$green',\n  },\n  '&.mouseActive': {\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.touchActive': {\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.focusFromKey': {\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n  },\n  '&>option': {\n    // only works in desktop edge, desktop firefox, and chrome on windows\n    color: '$highContrast',\n    background: '$colors$pageBackground',\n  },\n});\n\nconst Button = styled(Interactive.Button, {\n  display: 'block',\n  padding: '8px 26px',\n  margin: '18px 0 14px',\n  textAlign: 'center',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid',\n  borderRadius: '1000px',\n\n  '&.hover': {\n    borderColor: '$green',\n    boxShadow: '2px 3px 3px 0px rgba(0, 0, 0, 0.38)',\n  },\n  // focusFromKey styles are overridden by active styles (below), but not hover styles (above)\n  '&.focusFromKey': {\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.mouseActive': {\n    color: '$green',\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green, 1px 2px 3px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.touchActive': {\n    color: '$blue',\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.keyActive': {\n    color: '$purple',\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple, 1px 2px 3px 0px rgba(0, 0, 0, 0.38)',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n  },\n});\n\n// checking for fish easter egg\nconst Ocean = styled('div', {\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: 'royalblue',\n  opacity: 0.2,\n  pointerEvents: 'none',\n  zIndex: 1,\n});\n\nconst Fish = styled(Interactive.Button, {\n  position: 'fixed',\n  fontSize: '9vmin',\n  lineHeight: '7vmin',\n  '&.focusFromKey': {\n    filter: 'drop-shadow(6px 6px 3px royalblue) hue-rotate(50deg)',\n  },\n  zIndex: 2,\n});\n\ninterface FishType {\n  id: number;\n  top: number;\n  left: number;\n}\n\nconst createOneFish: (id: number) => FishType = (id) => ({\n  id,\n  top: Math.floor(Math.random() * 81),\n  left: Math.floor(Math.random() * 91),\n});\n\nexport const FormElements: React.VFC = () => {\n  const [textInputState, setTextInputState] = React.useState('');\n  const [textInputInputText, setTextInputInfoText] = React.useState('');\n  const [checkboxState, setCheckboxState] = React.useState(false);\n  const [anotherCheckboxState, setAnotherCheckboxState] = React.useState(false);\n  const [selectInputState, setSelectInputState] = React.useState('placeholder');\n  const [disableElements, setDisabledElements] = React.useState(false);\n\n  if (disableElements) {\n    textInputState !== '' && setTextInputState('');\n    checkboxState && setCheckboxState(false);\n    anotherCheckboxState && setAnotherCheckboxState(false);\n    selectInputState !== 'placeholder' && setSelectInputState('placeholder');\n  }\n\n  // checking for fish easter egg\n  const [fishes, setFishes] = React.useState<FishType[]>([]);\n\n  const createNewFishes = React.useCallback(() => {\n    const newFishes = Array(10)\n      .fill(1)\n      .map((_, idx) => createOneFish(idx));\n    setFishes(newFishes);\n  }, []);\n\n  React.useEffect(() => {\n    if (fishes.length === 1) {\n      setFishes((fishes) => [createOneFish(fishes[0].id)]);\n      const intervalId = window.setInterval(\n        () => {\n          setFishes((fishes) => [createOneFish(fishes[0].id)]);\n        },\n        // if the device is primarily a touch device then make the fish jump faster\n        // because a user's touch response is usually faster the their mouse response\n        primaryInput === 'touch' ? 700 : 1000,\n      );\n      return () => window.clearInterval(intervalId);\n    }\n  }, [fishes.length]);\n\n  return (\n    <DemoContainer id=\"form-elements\">\n      <DemoHeading>Form Elements</DemoHeading>\n\n      <TextInput\n        type=\"text\"\n        value={textInputState}\n        disabled={disableElements}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setTextInputState(e.target.value)\n        }\n        onStateChange={({ state }: InteractiveStateChange) => {\n          let infoText = '';\n          if (state.focus) {\n            infoText = 'This has focus for typing';\n          } else if (disableElements && (state.hover || state.active)) {\n            infoText = 'Un-disable form elements to use this text input';\n          }\n          setTextInputInfoText(infoText);\n        }}\n        placeholder={textInputInputText}\n      />\n\n      <CheckboxLabel disabled={disableElements}>\n        <Checkbox\n          disabled={disableElements}\n          checked={checkboxState}\n          onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setCheckboxState(event.target.checked)\n          }\n        >\n          <RadixCheckbox.Indicator as={CheckIcon} width=\"15\" height=\"15\" />\n        </Checkbox>\n        A checkbox for checking\n      </CheckboxLabel>\n\n      <CheckboxLabel disabled={disableElements}>\n        <Checkbox\n          disabled={disableElements}\n          checked={anotherCheckboxState}\n          onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setAnotherCheckboxState(event.target.checked)\n          }\n        >\n          <RadixCheckbox.Indicator as={CheckIcon} width=\"15\" height=\"15\" />\n        </Checkbox>\n        Another checkbox for double checking\n      </CheckboxLabel>\n\n      <SelectContainer disabled={disableElements}>\n        <Select\n          disabled={disableElements}\n          value={selectInputState}\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            setSelectInputState(e.target.value);\n            if (e.target.value === 'fishes') {\n              createNewFishes();\n            }\n          }}\n          // have to also use onMouseDown to setSelectInputState because of\n          // firefox bug: https://github.com/facebook/react/issues/12584#issuecomment-383233455\n          // note that other browsers don't fire a mousedown event when the select is open\n          onMouseDown={(e: any) => {\n            if (e.target.value) {\n              setSelectInputState(e.target.value);\n            }\n          }}\n        >\n          <option value=\"placeholder\" disabled hidden>\n            Select your favorite type of checking\n          </option>\n          <option value=\"interest\">Interest checking</option>\n          <option value=\"hockey\">Hockey checking</option>\n          <option value=\"todo\">Checking off a todo item</option>\n          <option value=\"double\">Double checking everything</option>\n          <option value=\"fishes\">Checking for fish 🐟🐟🐟🐇</option>\n        </Select>\n      </SelectContainer>\n\n      {fishes.length > 0 ? (\n        <>\n          <Ocean />\n          {fishes.map((fish, _, fishes) => (\n            <Fish\n              key={fish.id}\n              css={{ top: `${fish.top}vh`, left: `${fish.left}vw` }}\n              onClick={() => {\n                setFishes(fishes.filter((f) => f.id !== fish.id));\n              }}\n            >\n              🐟\n            </Fish>\n          ))}\n        </>\n      ) : null}\n\n      <Button disabled={disableElements}>Button</Button>\n\n      <CheckboxLabel css={{ marginBottom: 0 }}>\n        <Checkbox\n          onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setDisabledElements(event.target.checked)\n          }\n        >\n          <RadixCheckbox.Indicator as={CheckIcon} width=\"15\" height=\"15\" />\n        </Checkbox>\n        Disable form elements\n      </CheckboxLabel>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst CssButton = styled('button', {\n  display: 'block',\n  padding: '8px 20px',\n  marginTop: '18px',\n  textAlign: 'center',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid',\n  borderRadius: '1000px',\n  outline: 'revert',\n  '&:hover': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&:active': {\n    color: '$red',\n    borderColor: '$red',\n  },\n});\n\nconst InteractiveButton = styled(Interactive.Button, {\n  display: 'block',\n  padding: '8px 20px',\n  marginTop: '18px',\n  textAlign: 'center',\n  backgroundColor: '$formElementsBackground',\n  border: '1px solid',\n  borderRadius: '1000px',\n  '&.hover': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.active': {\n    color: '$red',\n    borderColor: '$red',\n  },\n  '&.focusFromKey': {\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\nconst ButtonsContainer = styled('div', {\n  display: 'flex',\n  gap: '15px',\n  marginTop: '15px',\n});\n\nexport const CssStickyHoverBug: React.VFC = () => {\n  return (\n    <DemoContainer id=\"css-sticky-hover-bug\">\n      <DemoHeading>CSS Sticky Hover Bug</DemoHeading>\n      <p>\n        On touch devices the CSS <code>:hover</code> state sticks until you tap\n        someplace else on the screen.\n      </p>\n      <ButtonsContainer>\n        <div>\n          <p>\n            Button styled with CSS, <code>:hover</code> is green,{' '}\n            <code>:active</code> is red.\n          </p>\n          <CssButton>CSS Button</CssButton>\n        </div>\n        <div>\n          <p>\n            Button styled with React Interactive, <code>.hover</code> is green,{' '}\n            <code>.active</code> is red.\n          </p>\n          <InteractiveButton\n            // useExtendedTouchActive to match css :active functionality\n            // which stays in the :active state as long a the touch point is on the screen,\n            // React Interactive's default is to exit the touchActive state when a click is no longer possible\n            useExtendedTouchActive\n          >\n            Interactive Button\n          </InteractiveButton>\n        </div>\n      </ButtonsContainer>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst StressTestHeadingContainer = styled('div', {\n  variants: {\n    stressTestShown: {\n      true: {\n        marginBottom: 10,\n      },\n    },\n  },\n});\n\nconst StressTestHeading = styled(DemoHeading, {\n  display: 'inline-block',\n  marginBottom: 0,\n  marginRight: 8,\n});\n\nconst ShowStressTestButton = styled(Interactive.Button, {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  borderRadius: '3px',\n  padding: '3px 4px 2px',\n  marginLeft: '3px',\n\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    textDecoration: 'none',\n    backgroundColor: '$backgroundPurple',\n    boxShadow: '0 0 0 1px $colors$purple',\n    // adds a 3D drop shadow as well\n    // boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\nconst StressTestItem = styled(Interactive.Button, {\n  display: 'block',\n  width: '100%',\n  fontFamily: 'monospace',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n  },\n});\n\nconst ArrayOfInteractive = Array(500)\n  .fill(1)\n  .map((_, idx) => (\n    <StressTestItem key={idx} useExtendedTouchActive>\n      {({ hover, active }: InteractiveState) =>\n        `Interactive button ${idx + 1}${hover || active ? ' - ' : ''}${\n          hover ? 'hover' : ''\n        }${hover && active ? ', ' : ''}${active ? active : ''}`\n      }\n    </StressTestItem>\n  ));\n\nexport const StressTest: React.VFC = () => {\n  const [showStressTest, setShowStressTest] = React.useState<boolean>(false);\n\n  return (\n    <DemoContainer>\n      <StressTestHeadingContainer\n        id=\"stress-test\"\n        stressTestShown={showStressTest}\n      >\n        <StressTestHeading>Stress Test</StressTestHeading>–\n        <ShowStressTestButton\n          onClick={() => setShowStressTest((prevState) => !prevState)}\n        >\n          {`${showStressTest ? 'remove' : 'create'}`} 500 Interactive buttons\n        </ShowStressTestButton>\n      </StressTestHeadingContainer>\n      {showStressTest ? ArrayOfInteractive : null}\n    </DemoContainer>\n  );\n};\n","import { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nexport const Button = styled(Interactive.Button, {\n  color: '$highContrast',\n  outline: 'none',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n    borderColor: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n    borderColor: '$purple',\n  },\n  variants: {\n    focus: {\n      outline: {\n        '&.focusFromKey': {\n          outline: '2px solid $colors$purple',\n          outlineOffset: '2px',\n        },\n      },\n      boxShadow: {\n        '&.focusFromKey': {\n          boxShadow: '0 0 0 2px $colors$purple',\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    focus: 'outline',\n  },\n});\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { GitHubLogoIcon } from '@radix-ui/react-icons';\nimport { Button } from './Button';\n\ninterface GitHubIconLinkProps {\n  href?: string;\n  'aria-label'?: string;\n  newWindow?: boolean;\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const GitHubIconLink: React.VFC<GitHubIconLinkProps> = ({\n  newWindow = true,\n  css,\n  ...props\n}) => (\n  <Button\n    {...props}\n    as={Interactive.A}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n    focus=\"boxShadow\"\n    css={{\n      display: 'inline-block',\n      width: '36px',\n      height: '36px',\n      padding: '3px',\n      borderRadius: '50%',\n      // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n      ...(css as any),\n    }}\n  >\n    <GitHubLogoIcon\n      width=\"30\"\n      height=\"30\"\n      // scale up the svg icon because it doesn't fill the view box\n      // see: https://github.com/radix-ui/icons/issues/73\n      style={{ transform: 'scale(1.1278)' }}\n    />\n  </Button>\n);\n","import * as React from 'react';\nimport { SunIcon } from '@radix-ui/react-icons';\nimport useDarkMode from 'use-dark-mode';\nimport { Button } from './Button';\nimport { darkThemeClass } from '../stitches.config';\n\ninterface DarkModeButtonProps {\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const DarkModeButton: React.VFC<DarkModeButtonProps> = ({\n  css,\n  ...props\n}) => {\n  // put a try catch around localStorage so this app will work in codesandbox\n  // when the user blocks third party cookies in chrome,\n  // which results in a security error when useDarkMode tries to access localStorage\n  // see https://github.com/codesandbox/codesandbox-client/issues/5397\n  let storageProvider: any = null;\n  try {\n    storageProvider = localStorage;\n  } catch {}\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n    storageProvider,\n  });\n\n  // add color-scheme style to <html> element\n  // so document scroll bars will have native dark mode styling\n  React.useEffect(() => {\n    if (darkMode.value === true) {\n      // @ts-ignore because colorScheme type not added yet\n      document.documentElement.style.colorScheme = 'dark';\n    } else {\n      // @ts-ignore\n      document.documentElement.style.colorScheme = 'light';\n    }\n  }, [darkMode.value]);\n\n  return (\n    <Button\n      {...props}\n      onClick={darkMode.toggle}\n      focus=\"boxShadow\"\n      css={{\n        width: '36px',\n        height: '36px',\n        padding: '3px',\n        borderRadius: '50%',\n        // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n        ...(css as any),\n      }}\n      aria-label=\"Toggle dark mode\"\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Button>\n  );\n};\n","import { StateLog } from './demos/StateLog';\nimport { ShowOn } from './demos/ShowOn';\nimport { Links } from './demos/Links';\nimport { FormElements } from './demos/FormElements';\nimport { CssStickyHoverBug } from './demos/CssStickyHoverBug';\nimport { StressTest } from './demos/StressTest';\nimport { styled } from './stitches.config';\nimport { GitHubIconLink } from './ui/GitHubIconLink';\nimport { DarkModeButton } from './ui/DarkModeButton';\nimport { DemoContainer } from './ui/DemoContainer';\n\nconst AppContainer = styled('div', {\n  maxWidth: '500px',\n  padding: '10px 15px 25px',\n  margin: '0 auto',\n});\n\nconst HeaderContainer = styled('header', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '20px',\n});\n\nconst H1 = styled('h1', {\n  display: 'flex',\n  alignItems: 'center',\n  fontSize: '26px',\n  marginRight: '10px',\n});\n\nconst HeaderIconContainer = styled('span', {\n  width: '80px',\n  display: 'inline-flex',\n  justifyContent: 'space-between',\n});\n\nexport const App = () => {\n  return (\n    <AppContainer>\n      <HeaderContainer>\n        <H1>React Interactive Demo</H1>\n        <HeaderIconContainer>\n          <GitHubIconLink\n            aria-label=\"GitHub repository for React Interactive\"\n            href=\"https://github.com/rafgraph/react-interactive\"\n          />\n          <DarkModeButton />\n        </HeaderIconContainer>\n      </HeaderContainer>\n      <DemoContainer as=\"p\" css={{ paddingBottom: '20px' }}>\n        Try out this demo on both mouse and touch devices, and test the keyboard\n        navigation too!\n      </DemoContainer>\n      <StateLog />\n      <ShowOn />\n      <Links />\n      <FormElements />\n      <CssStickyHoverBug />\n      <StressTest />\n    </AppContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../ui/Link';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCase.css';\n\nconst DisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <DisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </DisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCaseContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCase: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCaseContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCase-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCase-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCase-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCase-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCaseContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { styled, CSS } from '../stitches.config';\n\nconst PageJumpEdgeCaseContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst Label = styled('div', {\n  margin: '20px 0 5px',\n});\n\nconst interactiveStyles: CSS = {\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    outlineOffset: '2px',\n    outline: '2px solid $colors$purple',\n  },\n};\n\nconst InteractiveButton = styled(Interactive.Button, {\n  padding: '5px',\n  border: '1px solid',\n  ...interactiveStyles,\n});\n\nconst InteractiveLink = styled(Interactive.A, {\n  textDecoration: 'underline',\n  ...interactiveStyles,\n});\n\nconst InteractiveDiv = styled(Interactive.Div, {\n  padding: '5px',\n  border: '1px solid',\n  outline: 'none',\n  ...interactiveStyles,\n});\n\nexport const PageJumpEdgeCase: React.VFC = () => {\n  const [jumpPage, setJumpPage] = React.useState(false);\n\n  React.useEffect(() => {\n    const intervalId = window.setInterval(() => {\n      setJumpPage((prevState) => !prevState);\n      return () => window.clearInterval(intervalId);\n    }, 5000);\n  }, []);\n\n  const interactiveChildren = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) =>\n      `hover: ${hover}, active: ${active}, focus: ${focus}`,\n    [],\n  );\n\n  return (\n    <PageJumpEdgeCaseContainer>\n      <H1>Page Jump Edge Case</H1>\n      <p>\n        The content will jump down the page every 5 seconds, and then jump back.\n        Alternatively, clicking the button or div will jump the page instantly.\n        This simulates the page layout changing (external content is loaded,\n        etc), and tests how React Interactive handles a page jump when it's in\n        an interactive state.\n      </p>\n      <div style={{ height: jumpPage ? '150px' : '0px' }}></div>\n      <Label>Button:</Label>\n      <InteractiveButton\n        onClick={() => setJumpPage((prevState) => !prevState)}\n        useExtendedTouchActive\n      >\n        {interactiveChildren}\n      </InteractiveButton>\n      <Label>Link:</Label>\n\n      <InteractiveLink href=\"#\" useExtendedTouchActive>\n        {interactiveChildren}\n      </InteractiveLink>\n      <Label>Div:</Label>\n\n      <InteractiveDiv\n        onClick={() => setJumpPage((prevState) => !prevState)}\n        useExtendedTouchActive\n        tabIndex={0}\n      >\n        {interactiveChildren}\n      </InteractiveDiv>\n    </PageJumpEdgeCaseContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  createInteractive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from '../stitches.config';\n\n// TS demos in this file:\n// <DemoCreateInteractiveAs />\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// using createInteractive(as) to extend <Interactive>\n// and predefined Interactive.Tagname components\n\nconst InteractiveNav = createInteractive('nav');\nconst InteractiveRouterLink = createInteractive(Link);\n\nexport const DemoCreateInteractiveAs: React.VFC = () => (\n  <>\n    <Interactive.Button\n      // as=\"button\" // should error\n      type=\"submit\" // button specific prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      // foo // should error\n    >\n      Interactive.Button\n    </Interactive.Button>\n    <Interactive.A\n      // as=\"a\" // should error\n      href=\"https://rafgraph.dev\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive.A\n    </Interactive.A>\n    <Interactive.Div\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      Interactive.Div\n    </Interactive.Div>\n    <InteractiveNav\n      // as=\"nav\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveNav\n    </InteractiveNav>\n    <InteractiveRouterLink\n      // as={Link} // should error\n      to=\"/some-path\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveRouterLink\n    </InteractiveRouterLink>\n  </>\n);\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoCreateInteractiveAs />\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { App } from './App';\nimport { DisabledEdgeCase } from './other/DisabledEdgeCase';\nimport { PageJumpEdgeCase } from './other/PageJumpEdgeCase';\nimport { TypeScriptExamples } from './other/TypeScriptExamples';\n\nexport const Index = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/disabled-edge-case\" component={DisabledEdgeCase} />\n        <Route path=\"/page-jump-edge-case\" component={PageJumpEdgeCase} />\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}