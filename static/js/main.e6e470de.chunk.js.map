{"version":3,"sources":["stitches.config.ts","Interactive.tsx","MainDemo.tsx","DisabledEdgeCases/DisabledEdgeCases.tsx","TypeScriptExamples.tsx","App.tsx","index.tsx"],"names":["styled","theme","global","createGlobalCss","createCss","colors","pageBackground","highContrast","lowContrast","green","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","WebkitTapHighlightColor","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","minHeight","backgroundColor","ButtonBase","onClick","className","children","as","outline","outlineOffset","Link","checked","onChange","disabled","type","appearance","href","target","rel","borderBottom","borderBottomStyle","variants","DarkModeButton","width","MainDemoContainer","maxWidth","H1","display","justifyContent","marginBottom","P","StateLogContainer","overflow","StateLogItem","ItemTitle","StyledUl","listStyle","Li","changed","false","StyledLi","ExampleComponent","React","props","ref","MainDemo","darkMode","useDarkMode","undefined","classNameDark","iStateLog","updateIStateLog","eventLogEl","current","scrollTop","scrollHeight","buttonRefCallback","val","anchorRef","toggle","console","log","state","hover","onStateChange","prevState","map","idx","active","focus","StyledDisplayStateContainer","opacity","DisplayState","ButtonComponent","LinkComponent","DivComponent","tabIndex","DisabledEdgeCasesContainer","DemoContainer","initialState","DisabledEdgeCases","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","propsForInteractiveButton","element","hoverStyle","propsForInteractiveRouterLink","to","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6e470de.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, theme, global: createGlobalCss } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      green: 'rgb(0,168,0)',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    green: 'rgb(0,168,0)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input, ul, li': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { Interactive } from 'react-interactive';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\ninterface InteractiveButtonProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = ({\n  onClick,\n  className,\n  children,\n}) => (\n  <Interactive as=\"button\" className={className} onClick={onClick}>\n    {children}\n  </Interactive>\n);\nexport const ButtonBase = styled(InteractiveButton, {\n  color: '$highContrast',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveCheckboxProps {\n  checked: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  disabled?: boolean;\n  className?: string;\n}\nconst InteractiveCheckbox: React.VFC<InteractiveCheckboxProps> = ({\n  checked,\n  onChange,\n  disabled,\n  className,\n}) => (\n  <Interactive\n    as=\"input\"\n    type=\"checkbox\"\n    checked={checked}\n    onChange={onChange}\n    disabled={disabled}\n    className={className}\n  />\n);\nexport const CheckboxBase = styled(InteractiveCheckbox, {\n  appearance: 'checkbox',\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '1px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  href: string;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = ({\n  href,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive\n      as=\"a\"\n      href={href}\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </Interactive>\n  );\n};\nexport const Link = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '1px dotted $colors$green',\n  textDecoration: 'none',\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\ninterface DarkModeButtonBaseProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\nconst DarkModeButtonBase: React.VFC<DarkModeButtonBaseProps> = ({\n  onClick,\n  className,\n}) => (\n  <ButtonBase className={className} onClick={onClick}>\n    <SunIcon width=\"30\" height=\"30\" />\n  </ButtonBase>\n);\nexport const DarkModeButton = styled(DarkModeButtonBase, {\n  width: '30px',\n  height: '30px',\n});\n","import * as React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Interactive, InteractiveStateChange } from 'react-interactive';\nimport { styled, darkThemeClass } from './stitches.config';\nimport { Link, DarkModeButton } from './Interactive';\n\nconst MainDemoContainer = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nconst StateLogContainer = styled('div', {\n  height: '300px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflow: 'scroll',\n});\n\nconst StateLogItem = styled('div', {\n  marginBottom: '10px',\n});\n\nconst ItemTitle = styled('div', {\n  color: '$lowContrast',\n});\n\nconst StyledUl = styled('ul', {\n  listStyle: 'none',\n});\n\nconst Li = styled('li', {\n  variants: {\n    changed: {\n      false: { color: '$lowContrast' },\n    },\n  },\n});\n\nconst StyledLi: React.VFC<{\n  children: string | string[];\n  changed: boolean;\n}> = ({ children, changed }) => (\n  <Li changed={changed}>\n    <code>{children}</code>\n  </Li>\n);\n\nconst ExampleComponent: React.VFC = React.forwardRef<HTMLDivElement>(\n  (props, ref) => (\n    <div {...props} ref={ref}>\n      as example component\n    </div>\n  ),\n);\n\nexport const MainDemo = () => {\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  const [iStateLog, updateIStateLog] = React.useState<InteractiveStateChange[]>(\n    [],\n  );\n\n  const eventLogEl = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (eventLogEl && eventLogEl.current) {\n      eventLogEl.current.scrollTop = eventLogEl.current.scrollHeight;\n    }\n  });\n\n  const buttonRefCallback = React.useCallback((val: HTMLButtonElement) => {\n    return;\n  }, []);\n  const anchorRef = React.useRef<HTMLAnchorElement>(null);\n\n  return (\n    <MainDemoContainer>\n      <H1>\n        <span>React Interactive Demo</span>\n        <DarkModeButton onClick={darkMode.toggle} />\n      </H1>\n      <Link\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </Link>\n      <P>\n        This demo site for React Interactive v1 is under construction 🚧🚧 the{' '}\n        <Link href=\"https://react-interactive-v0.rafgraph.dev\">\n          v0 demo site can be found here\n        </Link>\n        .\n      </P>\n      <div>\n        <Interactive\n          as=\"button\"\n          // disabled\n          ref={buttonRefCallback}\n          onClick={() => console.log('interactive button click')}\n        >\n          interactive button\n        </Interactive>\n        <Interactive as=\"a\" href=\"#top\" ref={anchorRef}>\n          interactive link to #top\n        </Interactive>\n        <Interactive as={ExampleComponent} />\n        <Interactive as=\"div\">\n          {(state) => (\n            <div>children as a function, hover state: {`${state.hover}`}</div>\n          )}\n        </Interactive>\n        <Interactive\n          as=\"div\"\n          onStateChange={(state) => {\n            updateIStateLog((prevState) => [...prevState, state]);\n          }}\n        >\n          hover me\n        </Interactive>\n        <StateLogContainer ref={eventLogEl}>\n          {iStateLog.map(({ state, prevState }, idx) => (\n            <StateLogItem key={idx}>\n              <ItemTitle>State Change {idx + 1}</ItemTitle>\n              <StyledUl>\n                <StyledLi changed={state.hover !== prevState.hover}>\n                  hover: {`${state.hover}`} ({`${prevState.hover}`})\n                </StyledLi>\n                <StyledLi changed={state.active !== prevState.active}>\n                  active: {`${state.active}`} ({`${prevState.active}`})\n                </StyledLi>\n                <StyledLi changed={state.focus !== prevState.focus}>\n                  focus: {`${state.focus}`} ({`${prevState.focus}`})\n                </StyledLi>\n              </StyledUl>\n            </StateLogItem>\n          ))}\n        </StateLogContainer>\n      </div>\n    </MainDemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../Interactive';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCases.css';\n\nconst StyledDisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <StyledDisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </StyledDisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCasesContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCases: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCasesContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCasesContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from './stitches.config';\n\n// TS demos in this file:\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { MainDemo } from './MainDemo';\nimport { DisabledEdgeCases } from './DisabledEdgeCases/DisabledEdgeCases';\nimport { TypeScriptExamples } from './TypeScriptExamples';\n\nexport const App = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route path=\"/disabled-edge-cases\" component={DisabledEdgeCases} />\n        <Route component={MainDemo} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}