{"version":3,"sources":["stitches.config.ts","Interactive.tsx","TypeScriptExamples.tsx","App.tsx","index.tsx"],"names":["styled","theme","global","stitchesGlobal","createCss","colors","pageBackground","highContrast","lowContrast","green","darkThemeClass","globalStyles","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","WebkitTapHighlightColor","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","minHeight","backgroundColor","StyledDarkModeToggle","props","as","width","display","outline","outlineOffset","StyledLink","borderBottom","borderBottomStyle","variants","type","borderBottomWidth","propsForInteractiveButton","children","ref","element","hoverStyle","propsForInteractiveRouterLink","Link","to","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","React","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","current","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","disabled","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","href","DemoComposeAsUnionWithRef","disabledStyle","opacity","ContainerDiv","TypeScriptExamples","AppDiv","maxWidth","H1","justifyContent","marginBottom","P","StateLogContainer","overflow","StateLogItem","ItemTitle","StyledUl","listStyle","Li","changed","false","StyledLi","ExampleComponent","forwardRef","App","darkMode","useDarkMode","undefined","classNameDark","iStateLog","updateIStateLog","useState","eventLogEl","useRef","useEffect","scrollTop","scrollHeight","buttonRefCallback","useCallback","val","anchorRef","onClick","toggle","console","log","state","hover","onStateChange","prevState","map","idx","active","focus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0655a777.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, theme, global: stitchesGlobal } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      green: 'rgb(0,168,0)',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    green: 'rgb(0,168,0)',\n  },\n});\n\nexport const globalStyles = stitchesGlobal({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input, ul, li': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import React from 'react';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\nimport { Interactive } from 'react-interactive';\n\nconst DarkModeToggle: React.VFC<{ onClick: () => void }> = (props) => {\n  return (\n    <Interactive {...props} as=\"button\">\n      <SunIcon width=\"30\" height=\"30\" />\n    </Interactive>\n  );\n};\n\nexport const StyledDarkModeToggle = styled(DarkModeToggle, {\n  color: '$highContrast',\n  width: '30px',\n  height: '30px',\n  display: 'inline-block',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  children: React.ReactNode;\n  href: string;\n}\n\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = (props) => (\n  <Interactive {...props} as=\"a\" />\n);\n\nexport const StyledLink = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '2px dotted $green',\n  textDecoration: 'none',\n\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        borderBottomWidth: '1px',\n\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n","import * as React from 'react';\nimport {\n  Interactive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from './stitches.config';\n\n// TS demos in this file:\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Interactive, InteractiveStateChange } from 'react-interactive';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport { StyledLink, StyledDarkModeToggle } from './Interactive';\nimport { TypeScriptExamples } from './TypeScriptExamples';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nconst StateLogContainer = styled('div', {\n  height: '300px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflow: 'scroll',\n});\n\nconst StateLogItem = styled('div', {\n  marginBottom: '10px',\n});\n\nconst ItemTitle = styled('div', {\n  color: '$lowContrast',\n});\n\nconst StyledUl = styled('ul', {\n  listStyle: 'none',\n});\n\nconst Li = styled('li', {\n  variants: {\n    changed: {\n      false: { color: '$lowContrast' },\n    },\n  },\n});\n\nconst StyledLi: React.VFC<{\n  children: string | string[];\n  changed: boolean;\n}> = ({ children, changed }) => (\n  <Li changed={changed}>\n    <code>{children}</code>\n  </Li>\n);\n\nconst ExampleComponent: React.VFC = React.forwardRef<HTMLDivElement>(\n  (props, ref) => (\n    <div {...props} ref={ref}>\n      as example component\n    </div>\n  ),\n);\n\nexport const App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  const [iStateLog, updateIStateLog] = React.useState<InteractiveStateChange[]>(\n    [],\n  );\n\n  const eventLogEl = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (eventLogEl && eventLogEl.current) {\n      eventLogEl.current.scrollTop = eventLogEl.current.scrollHeight;\n    }\n  });\n\n  const buttonRefCallback = React.useCallback((val: HTMLButtonElement) => {\n    return;\n  }, []);\n  const anchorRef = React.useRef<HTMLAnchorElement>(null);\n\n  return (\n    <AppDiv>\n      <H1>\n        <span>React Interactive Demo</span>\n        <StyledDarkModeToggle onClick={darkMode.toggle} />\n      </H1>\n      <StyledLink\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </StyledLink>\n      <P>\n        This demo site for React Interactive v1 is under construction 🚧🚧 the{' '}\n        <StyledLink href=\"https://react-interactive-v0.rafgraph.dev\">\n          v0 demo site can be found here\n        </StyledLink>\n        .\n      </P>\n      <div>\n        <Interactive\n          as=\"button\"\n          // disabled\n          ref={buttonRefCallback}\n          onClick={() => console.log('interactive button click')}\n        >\n          interactive button\n        </Interactive>\n        <Interactive as=\"a\" href=\"#top\" ref={anchorRef}>\n          interactive link to #top\n        </Interactive>\n        <Interactive as={ExampleComponent} />\n        <Interactive as=\"div\">\n          {(state) => (\n            <div>children as a function, hover state: {`${state.hover}`}</div>\n          )}\n        </Interactive>\n        <Interactive\n          as=\"div\"\n          onStateChange={(state) => {\n            updateIStateLog((prevState) => [...prevState, state]);\n          }}\n        >\n          hover me\n        </Interactive>\n        <StateLogContainer ref={eventLogEl}>\n          {iStateLog.map(({ state, prevState }, idx) => (\n            <StateLogItem key={idx}>\n              <ItemTitle>State Change {idx + 1}</ItemTitle>\n              <StyledUl>\n                <StyledLi changed={state.hover !== prevState.hover}>\n                  hover: {`${state.hover}`} ({`${prevState.hover}`})\n                </StyledLi>\n                <StyledLi changed={state.active !== prevState.active}>\n                  active: {`${state.active}`} ({`${prevState.active}`})\n                </StyledLi>\n                <StyledLi changed={state.focus !== prevState.focus}>\n                  focus: {`${state.focus}`} ({`${prevState.focus}`})\n                </StyledLi>\n              </StyledUl>\n            </StateLogItem>\n          ))}\n        </StateLogContainer>\n      </div>\n      <TypeScriptExamples />\n    </AppDiv>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}