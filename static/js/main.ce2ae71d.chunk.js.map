{"version":3,"sources":["stitches.config.ts","StateLog.tsx","Interactive.tsx","MainDemo.tsx","DisabledEdgeCases/DisabledEdgeCases.tsx","TypeScriptExamples.tsx","App.tsx","index.tsx"],"names":["styled","theme","global","createGlobalCss","createCss","colors","pageBackground","backgroundContrast","highContrast","lowContrast","red","orange","yellow","green","blueGreen","blue","purple","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","WebkitTapHighlightColor","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","minHeight","backgroundColor","StateLogContainer","overflow","outline","outlineOffset","DemoButton","props","as","width","marginBottom","variantLookup","InfoType","variants","type","normal","StateLog","stateLog","setStateLog","React","logContainerElement","current","scrollTop","scrollHeight","handleInteractiveStateChange","state","prevState","prevLog","log","hover","push","active","focus","handleClick","event","eventFrom","handleDoubleClick","childrenAsAFunction","children","length","join","onStateChange","onClick","onDoubleClick","ref","tabIndex","map","item","idx","ButtonBase","className","Link","checked","onChange","disabled","appearance","href","target","rel","borderBottom","borderBottomStyle","DarkModeButton","MainDemoContainer","maxWidth","H1","display","justifyContent","P","MainDemo","darkMode","useDarkMode","undefined","classNameDark","toggle","StyledDisplayStateContainer","opacity","DisplayState","ButtonComponent","LinkComponent","DivComponent","DisabledEdgeCasesContainer","DemoContainer","initialState","DisabledEdgeCases","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","propsForInteractiveButton","element","hoverStyle","propsForInteractiveRouterLink","to","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce2ae71d.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, theme, global: createGlobalCss } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,30%)',\n      blueGreen: 'hsl(180,100%,35%)',\n      blue: 'hsl(240,100%,50%)',\n      purple: 'hsl(270,100%,60%)',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    blueGreen: 'hsl(180,100%,50%)',\n    blue: 'hsl(210,100%,60%)',\n    purple: 'hsl(270,85%,60%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input, ul, li': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import * as React from 'react';\nimport {\n  Interactive,\n  eventFrom,\n  InteractiveExtendableProps,\n  InteractiveState,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport { styled } from './stitches.config';\n\nconst StateLogContainer = styled('div', {\n  height: '300px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflow: 'scroll',\n  fontFamily: 'monospace',\n  outline: 'none',\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst InteractiveButton: React.VFC<InteractiveExtendableProps<'button'>> = (\n  props,\n) => <Interactive {...props} as=\"button\" />;\n\nconst DemoButton = styled(InteractiveButton, {\n  fontFamily: 'monospace',\n  fontSize: '18px',\n  textAlign: 'center',\n  width: '100%',\n  height: '60px',\n  border: '1px solid',\n  marginBottom: '5px',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.mouseActive': {\n    color: '$red',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromMouse, &.focusFromTouch': {\n    outline: '3px solid $colors$backgroundContrast',\n    outlineOffset: '1px',\n  },\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst variantLookup: Record<string, any> = {\n  'hover: true': 'green',\n  'hover: false': 'normal',\n  'active: mouseActive': 'red',\n  'active: touchActive': 'blue',\n  'active: keyActive': 'purple',\n  'active: false': 'normal',\n  'focus: focusFromMouse': 'normal',\n  'focus: focusFromTouch': 'normal',\n  'focus: focusFromKey': 'purple',\n  'focus: false': 'normal',\n};\n\nconst InfoType = styled('span', {\n  color: '$lowContrast',\n  variants: {\n    type: {\n      normal: { color: '$highContrast' },\n      green: { color: '$green' },\n      blue: { color: '$blue' },\n      purple: { color: '$purple' },\n      red: { color: '$red' },\n    },\n  },\n});\n\nexport const StateLog: React.VFC = () => {\n  const [stateLog, setStateLog] = React.useState<string[]>([]);\n\n  const logContainerElement = React.useRef<HTMLDivElement>(null!);\n\n  React.useEffect(() => {\n    if (logContainerElement.current) {\n      logContainerElement.current.scrollTop =\n        logContainerElement.current.scrollHeight;\n    }\n  }, [stateLog]);\n\n  const handleInteractiveStateChange = React.useCallback(\n    ({ state, prevState }: InteractiveStateChange) => {\n      setStateLog((prevLog) => {\n        const log = [...prevLog];\n        if (state.hover !== prevState.hover) {\n          log.push(`hover: ${state.hover}`);\n        }\n        if (state.active !== prevState.active) {\n          log.push(`active: ${state.active}`);\n        }\n        if (state.focus !== prevState.focus) {\n          log.push(`focus: ${state.focus}`);\n        }\n        return log;\n      });\n    },\n    [],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const handleDoubleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `double click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const childrenAsAFunction = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) => {\n      const children: string[] = [];\n      if (hover) {\n        children.push('hover');\n      }\n      if (active) {\n        children.push(active);\n      }\n      if (focus) {\n        children.push(focus);\n      }\n      if (children.length === 0) {\n        children.push('normal');\n      }\n      return children.join(', ');\n    },\n    [],\n  );\n\n  return (\n    <>\n      <DemoButton\n        onStateChange={handleInteractiveStateChange}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n      >\n        {childrenAsAFunction}\n      </DemoButton>\n      <Interactive\n        as={StateLogContainer}\n        ref={logContainerElement}\n        tabIndex={0}\n      >\n        {stateLog.map((item, idx) => (\n          <div key={idx}>\n            <InfoType>{idx + 1}</InfoType>{' '}\n            <InfoType type={variantLookup[item]}>{item}</InfoType>\n          </div>\n        ))}\n      </Interactive>\n    </>\n  );\n};\n","import { Interactive } from 'react-interactive';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\ninterface InteractiveButtonProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = ({\n  onClick,\n  className,\n  children,\n}) => (\n  <Interactive as=\"button\" className={className} onClick={onClick}>\n    {children}\n  </Interactive>\n);\nexport const ButtonBase = styled(InteractiveButton, {\n  color: '$highContrast',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveCheckboxProps {\n  checked: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  disabled?: boolean;\n  className?: string;\n}\nconst InteractiveCheckbox: React.VFC<InteractiveCheckboxProps> = ({\n  checked,\n  onChange,\n  disabled,\n  className,\n}) => (\n  <Interactive\n    as=\"input\"\n    type=\"checkbox\"\n    checked={checked}\n    onChange={onChange}\n    disabled={disabled}\n    className={className}\n  />\n);\nexport const CheckboxBase = styled(InteractiveCheckbox, {\n  appearance: 'checkbox',\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '1px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  href: string;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = ({\n  href,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive\n      as=\"a\"\n      href={href}\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </Interactive>\n  );\n};\nexport const Link = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '1px dotted $colors$green',\n  textDecoration: 'none',\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\ninterface DarkModeButtonBaseProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\nconst DarkModeButtonBase: React.VFC<DarkModeButtonBaseProps> = ({\n  onClick,\n  className,\n}) => (\n  <ButtonBase className={className} onClick={onClick}>\n    <SunIcon width=\"30\" height=\"30\" />\n  </ButtonBase>\n);\nexport const DarkModeButton = styled(DarkModeButtonBase, {\n  width: '30px',\n  height: '30px',\n});\n","import useDarkMode from 'use-dark-mode';\nimport { StateLog } from './StateLog';\nimport { styled, darkThemeClass } from './stitches.config';\nimport { Link, DarkModeButton } from './Interactive';\n\nconst MainDemoContainer = styled('div', {\n  maxWidth: '500px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nexport const MainDemo = () => {\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  return (\n    <MainDemoContainer>\n      <H1>\n        <span>React Interactive Demo</span>\n        <DarkModeButton onClick={darkMode.toggle} />\n      </H1>\n      <Link\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </Link>\n      <P>\n        This demo site for React Interactive v1 is under construction 🚧🚧 the{' '}\n        <Link href=\"https://react-interactive-v0.rafgraph.dev\">\n          v0 demo site can be found here\n        </Link>\n        .\n      </P>\n      <StateLog />\n    </MainDemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../Interactive';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCases.css';\n\nconst StyledDisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <StyledDisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </StyledDisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCasesContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCases: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCasesContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCasesContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from './stitches.config';\n\n// TS demos in this file:\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { MainDemo } from './MainDemo';\nimport { DisabledEdgeCases } from './DisabledEdgeCases/DisabledEdgeCases';\nimport { TypeScriptExamples } from './TypeScriptExamples';\n\nexport const App = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route path=\"/disabled-edge-cases\" component={DisabledEdgeCases} />\n        <Route component={MainDemo} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}