{"version":3,"sources":["stitches.config.ts","Interactive.tsx","ui.tsx","StateLog.tsx","MainDemo.tsx","DisabledEdgeCases/DisabledEdgeCases.tsx","TypeScriptExamples.tsx","App.tsx","index.tsx"],"names":["styled","theme","global","createGlobalCss","createCss","colors","pageBackground","backgroundContrast","highContrast","lowContrast","red","orange","yellow","green","blueGreen","blue","purple","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","WebkitTapHighlightColor","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","minHeight","backgroundColor","ButtonBase","onClick","className","children","as","outline","outlineOffset","CheckboxBase","checked","onCheckedChange","disabled","Interactive","CheckIcon","width","appearance","boxShadow","borderRadius","display","alignItems","justifyContent","LabelBase","props","Label","cursor","opacity","Link","href","target","rel","borderBottom","borderBottomStyle","variants","type","DarkModeButton","DemoContainer","DemoHeading","marginBottom","StateLogContainer","overflow","DemoButton","variantLookup","InfoType","normal","ExtendedTouchActiveOptionContainer","marginTop","OptionLabel","OptionCheckbox","marginRight","CodeBlock","StateLog","stateLog","setStateLog","React","useExtendedTouchActive","setUseExtendedTouchActive","logContainerElement","current","scrollTop","scrollHeight","handleInteractiveStateChange","state","prevState","prevLog","log","hover","push","active","focus","handleClick","event","eventFrom","handleDoubleClick","childrenAsAFunction","length","join","onStateChange","onDoubleClick","ref","tabIndex","map","item","idx","deviceType","MainDemoContainer","maxWidth","H1","P","MainDemo","darkMode","useDarkMode","undefined","classNameDark","toggle","StyledDisplayStateContainer","DisplayState","ButtonComponent","LinkComponent","DivComponent","DisabledEdgeCasesContainer","initialState","DisabledEdgeCases","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","propsForInteractiveButton","element","hoverStyle","propsForInteractiveRouterLink","to","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed9e4c80.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, theme, global: createGlobalCss } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,30%)',\n      blueGreen: 'hsl(180,100%,35%)',\n      blue: 'hsl(240,100%,50%)',\n      purple: 'hsl(270,100%,60%)',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    blueGreen: 'hsl(180,100%,50%)',\n    blue: 'hsl(210,100%,60%)',\n    purple: 'hsl(270,85%,60%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, h3, code, button, form, input, ul, li': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { Interactive, InteractiveExtendableProps } from 'react-interactive';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport * as Label from '@radix-ui/react-label';\nimport { SunIcon, CheckIcon } from '@radix-ui/react-icons';\nimport { styled } from './stitches.config';\n\n////////////////////////////////////////\n\ninterface InteractiveButtonProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = ({\n  onClick,\n  className,\n  children,\n}) => (\n  <Interactive as=\"button\" className={className} onClick={onClick}>\n    {children}\n  </Interactive>\n);\nexport const ButtonBase = styled(InteractiveButton, {\n  color: '$highContrast',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\n////////////////////////////////////////\n\n// checkbox and label usage:\n// <LabelBase disabled={disabled}>\n//   <CheckboxBase\n//     disabled={disabled}\n//     checked={checked}\n//     onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n//       setChecked(event.target.checked)\n//     }\n//   />\n//   Label text here\n//  </LabelBase>\n\ninterface InteractiveCheckboxProps {\n  checked: boolean;\n  onCheckedChange: React.ChangeEventHandler<HTMLInputElement>;\n  className?: string;\n  disabled?: boolean;\n}\n\nconst InteractiveCheckbox: React.VFC<InteractiveCheckboxProps> = ({\n  checked,\n  onCheckedChange,\n  className,\n  disabled,\n}) => (\n  <Checkbox.Root\n    as={Interactive}\n    checked={checked}\n    onCheckedChange={onCheckedChange}\n    className={className}\n    disabled={disabled}\n  >\n    <Checkbox.Indicator as={CheckIcon} width=\"30\" height=\"30\" />\n  </Checkbox.Root>\n);\n\nexport const CheckboxBase = styled(InteractiveCheckbox, {\n  appearance: 'none',\n  backgroundColor: 'transparent',\n  boxShadow: 'inset 0 0 0 1px $colors$highContrast',\n  width: '30px',\n  height: '30px',\n  borderRadius: '2px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // hover and active are styled in LabelBase so styles are applied when label is hovered/active\n  // '&.hover, &.active': {...},\n  '&.focusFromKey': {\n    outline: 'none',\n    boxShadow: 'inset 0 0 0 1px $colors$purple, 0 0 0 1px $colors$purple',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n});\n\nconst InteractiveLabel: React.VFC<\n  InteractiveExtendableProps<typeof Label.Root>\n> = (props) => <Interactive {...props} as={Label.Root} />;\n\nexport const LabelBase = styled(InteractiveLabel, {\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  // style CheckboxBase (which renders a button) when label is hovered/active\n  '&.hover>button, &.mouseActive>button': {\n    color: '$green',\n    boxShadow: 'inset 0 0 0 1px $colors$green, 0 0 0 1px $colors$green',\n  },\n  '&.touchActive>button': {\n    color: '$blue',\n    boxShadow: 'inset 0 0 0 1px $colors$blue, 0 0 0 1px $colors$blue',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n  // required because of radix checkbox bug: https://github.com/radix-ui/primitives/issues/605\n  '&>input': {\n    display: 'none',\n  },\n});\n\n////////////////////////////////////////\n\ninterface InteractiveLinkProps {\n  href: string;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = ({\n  href,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive\n      as=\"a\"\n      href={href}\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </Interactive>\n  );\n};\nexport const Link = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '1px dotted $colors$green',\n  textDecoration: 'none',\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\n////////////////////////////////////////\n\ninterface DarkModeButtonBaseProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\nconst DarkModeButtonBase: React.VFC<DarkModeButtonBaseProps> = ({\n  onClick,\n  className,\n}) => (\n  <ButtonBase className={className} onClick={onClick}>\n    <SunIcon width=\"30\" height=\"30\" />\n  </ButtonBase>\n);\nexport const DarkModeButton = styled(DarkModeButtonBase, {\n  width: '30px',\n  height: '30px',\n});\n\n////////////////////////////////////////\n","import { styled } from './stitches.config';\n\nexport const DemoContainer = styled('div', {\n  margin: '30px 0',\n});\n\nexport const DemoHeading = styled('h2', {\n  fontSize: '22px',\n  marginBottom: '10px',\n});\n","import * as React from 'react';\nimport { deviceType } from 'detect-it';\nimport {\n  Interactive,\n  eventFrom,\n  InteractiveExtendableProps,\n  InteractiveState,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport { CheckboxBase, LabelBase } from './Interactive';\nimport { DemoContainer, DemoHeading } from './ui';\nimport { styled } from './stitches.config';\n\nconst StateLogContainer = styled('div', {\n  height: '200px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflow: 'scroll',\n  fontFamily: 'monospace',\n  outline: 'none',\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst InteractiveButton: React.VFC<InteractiveExtendableProps<'button'>> = (\n  props,\n) => <Interactive {...props} as=\"button\" />;\n\nconst DemoButton = styled(InteractiveButton, {\n  fontFamily: 'monospace',\n  fontSize: '20px',\n  textAlign: 'center',\n  width: '100%',\n  height: '50px',\n  border: '1px solid',\n  marginBottom: '5px',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.mouseActive': {\n    color: '$red',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromMouse, &.focusFromTouch': {\n    outline: '3px solid $colors$backgroundContrast',\n    outlineOffset: '1px',\n  },\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst variantLookup: Record<string, any> = {\n  'hover: true': 'green',\n  'hover: false': 'normal',\n  'active: mouseActive': 'red',\n  'active: touchActive': 'blue',\n  'active: keyActive': 'purple',\n  'active: false': 'normal',\n  'focus: focusFromMouse': 'normal',\n  'focus: focusFromTouch': 'normal',\n  'focus: focusFromKey': 'purple',\n  'focus: false': 'normal',\n};\n\nconst InfoType = styled('span', {\n  color: '$lowContrast',\n  variants: {\n    type: {\n      normal: { color: '$highContrast' },\n      green: { color: '$green' },\n      blue: { color: '$blue' },\n      purple: { color: '$purple' },\n      red: { color: '$red' },\n    },\n  },\n});\n\nconst ExtendedTouchActiveOptionContainer = styled('div', {\n  marginTop: '10px',\n});\n\nconst OptionLabel = styled(LabelBase, {\n  display: 'inline-flex',\n  alignItems: 'center',\n  fontSize: '18px',\n});\n\nconst OptionCheckbox = styled(CheckboxBase, {\n  marginRight: '4px',\n});\n\nconst CodeBlock = styled('code', {\n  backgroundColor: '$backgroundContrast',\n  marginTop: '2px',\n  padding: '4px 6px 4px',\n  borderRadius: '5px',\n});\n\nexport const StateLog: React.VFC = () => {\n  const [stateLog, setStateLog] = React.useState<string[]>([]);\n  const [\n    useExtendedTouchActive,\n    setUseExtendedTouchActive,\n  ] = React.useState<boolean>(false);\n\n  const logContainerElement = React.useRef<HTMLDivElement>(null!);\n\n  React.useEffect(() => {\n    if (logContainerElement.current) {\n      logContainerElement.current.scrollTop =\n        logContainerElement.current.scrollHeight;\n    }\n  }, [stateLog]);\n\n  const handleInteractiveStateChange = React.useCallback(\n    ({ state, prevState }: InteractiveStateChange) => {\n      setStateLog((prevLog) => {\n        const log = [...prevLog];\n        if (state.hover !== prevState.hover) {\n          log.push(`hover: ${state.hover}`);\n        }\n        if (state.active !== prevState.active) {\n          log.push(`active: ${state.active}`);\n        }\n        if (state.focus !== prevState.focus) {\n          log.push(`focus: ${state.focus}`);\n        }\n        return log;\n      });\n    },\n    [],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const handleDoubleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `double click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const childrenAsAFunction = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) => {\n      const children: string[] = [];\n      if (hover) {\n        children.push('hover');\n      }\n      if (active) {\n        children.push(active);\n      }\n      if (focus) {\n        children.push(focus);\n      }\n      if (children.length === 0) {\n        children.push('normal');\n      }\n      return children.join(', ');\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer>\n      <DemoHeading>Interactive State Log</DemoHeading>\n      <DemoButton\n        onStateChange={handleInteractiveStateChange}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        useExtendedTouchActive={useExtendedTouchActive}\n      >\n        {childrenAsAFunction}\n      </DemoButton>\n      <Interactive\n        as={StateLogContainer}\n        ref={logContainerElement}\n        tabIndex={0}\n      >\n        {stateLog.map((item, idx) => (\n          <div key={idx}>\n            <InfoType>{idx + 1}</InfoType>{' '}\n            <InfoType type={variantLookup[item]}>{item}</InfoType>\n          </div>\n        ))}\n      </Interactive>\n      {deviceType !== 'mouseOnly' ? (\n        <ExtendedTouchActiveOptionContainer>\n          <OptionLabel>\n            <OptionCheckbox\n              checked={useExtendedTouchActive}\n              onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setUseExtendedTouchActive(event.target.checked)\n              }\n            />\n            <CodeBlock>useExtendedTouchActive</CodeBlock>\n          </OptionLabel>\n        </ExtendedTouchActiveOptionContainer>\n      ) : null}\n    </DemoContainer>\n  );\n};\n","import useDarkMode from 'use-dark-mode';\nimport { StateLog } from './StateLog';\nimport { styled, darkThemeClass } from './stitches.config';\nimport { Link, DarkModeButton } from './Interactive';\n\nconst MainDemoContainer = styled('div', {\n  maxWidth: '500px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nexport const MainDemo = () => {\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  return (\n    <MainDemoContainer>\n      <H1>\n        <span>React Interactive Demo</span>\n        <DarkModeButton onClick={darkMode.toggle} />\n      </H1>\n      <Link\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/react-interactive\"\n      >\n        https://github.com/rafgraph/react-interactive\n      </Link>\n      <P>\n        This demo site for React Interactive v1 is under construction 🚧🚧 the{' '}\n        <Link href=\"https://react-interactive-v0.rafgraph.dev\">\n          v0 demo site can be found here\n        </Link>\n        .\n      </P>\n      <StateLog />\n    </MainDemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../Interactive';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCases.css';\n\nconst StyledDisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <StyledDisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </StyledDisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCasesContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCases: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCasesContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCases-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCases-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCases-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCasesContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from './stitches.config';\n\n// TS demos in this file:\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { MainDemo } from './MainDemo';\nimport { DisabledEdgeCases } from './DisabledEdgeCases/DisabledEdgeCases';\nimport { TypeScriptExamples } from './TypeScriptExamples';\n\nexport const App = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route path=\"/disabled-edge-cases\" component={DisabledEdgeCases} />\n        <Route component={MainDemo} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}