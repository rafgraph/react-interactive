{"version":3,"sources":["stitches.config.ts","ui/DemoContainer.tsx","demos/StateLog.tsx","demos/ShowOn.tsx","ui/Link.tsx","demos/Links.tsx","demos/StressTest.tsx","ui/Button.tsx","ui/GitHubIconLink.tsx","ui/DarkModeButton.tsx","App.tsx","other/DisabledEdgeCase.tsx","other/PageJumpEdgeCase.tsx","other/TypeScriptExamples.tsx","index.tsx"],"names":["stitchesConfig","createCss","theme","colors","pageBackground","backgroundContrast","highContrast","lowContrast","red","orange","yellow","green","outlineGreen","blue","outlineBlue","purple","backgroundPurple","styled","keyframes","global","createGlobalCss","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","lineHeight","wordBreak","color","background","WebkitTapHighlightColor","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","height","minHeight","backgroundColor","DemoContainer","DemoHeading","marginBottom","StateLogContainer","overflowY","outline","outlineOffset","DemoButton","props","as","width","variantLookup","InfoType","variants","type","normal","ExtendedTouchActiveOptionContainer","marginTop","ExtendedTouchActiveOptionLabel","createInteractive","Label","cursor","display","alignItems","verticalAlign","borderColor","boxShadow","opacity","ExtendedTouchActiveOptionCheckbox","Checkbox","flexShrink","marginRight","appearance","borderRadius","CodeBlock","StateLog","stateLog","setStateLog","React","useExtendedTouchActive","setUseExtendedTouchActive","logContainerElement","current","scrollTop","scrollHeight","handleInteractiveStateChange","state","prevState","prevLog","log","hover","push","active","focus","handleClick","event","eventFrom","handleDoubleClick","childrenAsAFunction","children","length","join","onStateChange","onClick","onDoubleClick","ref","tabIndex","map","item","idx","test","deviceType","checked","onCheckedChange","target","CheckIcon","ShowOnDemoHeading","InfoTextContainer","justifyContent","showInfo","false","InfoIconContainer","InteractiveInfo","Interactive","Span","ShowOn","setShowInfo","handleOnStateChange","StyledLink","A","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","defaultVariants","Link","newWindow","undefined","rel","scale","transform","linkCss","animation","AnchorLink","RouterLink","ReactRouterLink","Links","href","to","style","StressTestHeadingContainer","StressTestHeading","ShowStressTestButton","Button","marginLeft","StressTestItem","ArrayOfInteractive","Array","fill","_","StressTest","showStressTest","setShowStressTest","GitHubIconLink","css","DarkModeButton","storageProvider","localStorage","darkMode","useDarkMode","classNameDark","value","document","documentElement","colorScheme","toggle","aria-label","AppContainer","maxWidth","HeaderContainer","H1","HeaderIconContainer","DemoInfoText","App","DisplayStateContainer","DisplayState","disabled","ButtonComponent","LinkComponent","DivComponent","DisabledEdgeCaseContainer","initialState","DisabledEdgeCase","buttonState","setButtonState","buttonDisabled","setButtonDisabled","linkState","setLinkState","linkDisabled","setLinkDisabled","divState","setDivState","divDisabled","setDivDisabled","buttonComponentState","setButtonComponentState","buttonComponentDisabled","setButtonComponentDisabled","linkComponentState","setLinkComponentState","linkComponentDisabled","setLinkComponentDisabled","divComponentState","setDivComponentState","divComponentDisabled","setDivComponentDisabled","className","PageJumpEdgeCaseContainer","interactiveStyles","InteractiveButton","InteractiveLink","InteractiveDiv","Div","PageJumpEdgeCase","jumpPage","setJumpPage","intervalId","window","setInterval","clearInterval","interactiveChildren","InteractiveNav","InteractiveRouterLink","DemoCreateInteractiveAs","element","hoverStyle","propsForInteractiveButton","propsForInteractiveRouterLink","DemoPropsForInteractive","ComposeAsTagNameWithoutRef","additionalProp","ComposeAsTagNameWithRef","propsForComposeAsTagNameWithRef","DemoComposeAsTagName","MyComponent","someMyComponentProp","ComposeAsComponentWithoutRef","ComposeAsComponentWithRef","propsForComposeAsComponentWithRef","DemoComposeAsComponent","ComposeAsUnionWithRef","As","passThroughProps","replace","propsWithoutRouterProps","propsForComposeAsUnionWithRef","DemoComposeAsUnionWithRef","disabledStyle","ContainerDiv","TypeScriptExamples","Index","exact","path","component","render","ReactDOM","getElementById"],"mappings":"4PAEO,MAAMA,EAAiBC,YAAU,CACtCC,MAAO,CACLC,OAAQ,CACNC,eAAgB,mBAChBC,mBAAoB,mBACpBC,aAAc,aACdC,YAAa,mBACbC,IAAK,kBACLC,OAAQ,mBACRC,OAAQ,mBACRC,MAAO,oBACPC,aAAc,mBACdC,KAAM,oBACNC,YAAa,oBACbC,OAAQ,oBACRC,iBAAkB,yBAOX,OACXC,EADW,MAEXf,EAFW,UAGXgB,EACAC,OAAQC,GACNpB,EAESqB,EAAiBnB,EAAM,CAClCC,OAAQ,CACNC,eAAgB,gBAChBC,mBAAoB,gBACpBC,aAAc,mBACdC,YAAa,mBACbC,IAAK,kBACLC,OAAQ,kBACRC,OAAQ,kBACRC,MAAO,mBACPC,aAAc,mBACdC,KAAM,oBACNC,YAAa,mBACbC,OAAQ,mBACRC,iBAAkB,uBAITM,EAAYF,EAAgB,CAEvC,2CAA4C,CAC1CG,IAAK,SAGP,mEAAoE,CAClEC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,UAAW,UACXC,KAAM,UACNC,WAAY,UACZC,eAAgB,UAChBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,WAAY,cACZC,wBAAyB,eAG3BC,KAAM,CACJH,MAAO,gBACPI,WAAY,wCAEZL,UAAW,aACXM,oBAAqB,cACrBC,oBAAqB,YACrBC,SAAU,OACVd,UAAW,aACXe,eAAgB,QAElBC,KAAM,CACJL,WAAY,aAGd,aAAc,CACZM,OAAQ,QAEV,QAAS,CACPC,UAAW,OACXC,gBAAiB,qB,kDCzFd,MAAMC,EAAgB9B,EAAO,MAAO,CACzCO,OAAQ,WAGGwB,EAAc/B,EAAO,KAAM,CACtCwB,SAAU,OACVQ,aAAc,S,WCQhB,MAAMC,EAAoBjC,EAAO,MAAO,CACtC2B,OAAQ,QACRlB,QAAS,QACTD,OAAQ,0BACR0B,UAAW,SACXb,WAAY,YACZc,QAAS,OACT,iBAAkB,CAChBA,QAAS,2BACTC,cAAe,SAQbC,EAAarC,GAHjBsC,GACG,cAAC,IAAD,IAAiBA,EAAOC,GAAG,YAEa,CAC3ClB,WAAY,YACZG,SAAU,OACVV,UAAW,SACX0B,MAAO,OACPZ,UAAW,OACXpB,OAAQ,YACRwB,aAAc,MACd,UAAW,CACTf,MAAO,UAET,gBAAiB,CACfA,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,cAAe,CACbA,MAAO,WAET,mBAAoB,CAClBkB,QAAS,gCACTC,cAAe,OAEjB,mBAAoB,CAClBD,QAAS,iCACTC,cAAe,OAEjB,iBAAkB,CAChBD,QAAS,2BACTC,cAAe,SAIbK,EAAqC,CACzC,cAAe,QACf,eAAgB,SAChB,sBAAuB,QACvB,sBAAuB,OACvB,oBAAqB,SACrB,gBAAiB,SACjB,wBAAyB,QACzB,wBAAyB,OACzB,sBAAuB,SACvB,eAAgB,UAGZC,EAAW1C,EAAO,OAAQ,CAC9BiB,MAAO,eACP0B,SAAU,CACRC,KAAM,CACJC,OAAQ,CAAE5B,MAAO,gBACjBvB,MAAO,CAAEuB,MAAO,UAChBrB,KAAM,CAAEqB,MAAO,SACfnB,OAAQ,CAAEmB,MAAO,WACjBzB,OAAQ,CAAEyB,MAAO,eAKjB6B,EAAqC9C,EAAO,MAAO,CACvD+C,UAAW,SAGPC,EAAiChD,EAAOiD,YAAkBC,KAAa,CAC3EC,OAAQ,UACR3B,SAAU,OACV4B,QAAS,cACTC,WAAY,SAIZC,cAAe,MAGf,uCAAwC,CACtCrC,MAAO,SACPsC,YAAa,SACbC,UAAW,2BAEb,uBAAwB,CACtBvC,MAAO,QACPsC,YAAa,QACbC,UAAW,0BAEb,aAAc,CACZC,QAAS,GACTN,OAAQ,SAGV,UAAW,CACTC,QAAS,UAIPM,EAAoC1D,EACxCiD,YAAkBU,KAClB,CACEC,WAAY,EACZC,YAAa,MACbC,WAAY,OACZtD,OAAQ,0BACRgC,MAAO,OACPb,OAAQ,OACRoC,aAAc,MAGd,iBAAkB,CAChB5B,QAAS,OAGToB,YAAa,qBACbC,UAAW,uCAEb,cAAe,CACbvC,MAAO,aAKP+C,EAAYhE,EAAO,OAAQ,CAC/B6B,gBAAiB,sBACjBkB,UAAW,MACXtC,QAAS,cACTsD,aAAc,QAGHE,EAAsB,KACjC,MAAOC,EAAUC,GAAeC,WAAyB,KAEvDC,EACAC,GACEF,YAAwB,GAEtBG,EAAsBH,SAA6B,MAEzDA,aAAgB,KACVG,EAAoBC,UACtBD,EAAoBC,QAAQC,UAC1BF,EAAoBC,QAAQE,gBAE/B,CAACR,IAEJ,MAAMS,EAA+BP,eACnC,EAAGQ,QAAOC,gBACRV,GAAaW,IACX,MAAMC,EAAM,IAAID,GAUhB,OATIF,EAAMI,QAAUH,EAAUG,OAC5BD,EAAIE,KAAJ,iBAAmBL,EAAMI,QAEvBJ,EAAMM,SAAWL,EAAUK,QAC7BH,EAAIE,KAAJ,kBAAoBL,EAAMM,SAExBN,EAAMO,QAAUN,EAAUM,OAC5BJ,EAAIE,KAAJ,iBAAmBL,EAAMO,QAEpBJ,OAGX,IAGIK,EAAchB,eACjBiB,IACClB,GAAaW,GAAY,IACpBA,EADoB,0BAEJQ,YAAUD,SAGjC,IAGIE,EAAoBnB,eACvBiB,IACClB,GAAaW,GAAY,IACpBA,EADoB,iCAEGQ,YAAUD,SAGxC,IAGIG,EAAsBpB,eAC1B,EAAGY,QAAOE,SAAQC,YAChB,MAAMM,EAAqB,GAa3B,OAZIT,GACFS,EAASR,KAAK,SAEZC,GACFO,EAASR,KAAKC,GAEZC,GACFM,EAASR,KAAKE,GAEQ,IAApBM,EAASC,QACXD,EAASR,KAAK,UAETQ,EAASE,KAAK,QAEvB,IAGF,OACE,eAAC7D,EAAD,WACE,cAACC,EAAD,oCACA,cAACM,EAAD,CACEuD,cAAejB,EACfkB,QAAST,EACTU,cAAeP,EACflB,uBAAwBA,EAJ1B,SAMGmB,IAEH,cAAC,IAAD,CACEjD,GAAIN,EACJ8D,IAAKxB,EACLyB,SAAU,EAHZ,SAKG9B,EAAS+B,KAAI,CAACC,EAAMC,IACnB,gCACE,cAACzD,EAAD,UAAWyD,EAAM,IAAc,IAC/B,cAACzD,EAAD,CACEE,KAAM,QAAQwD,KAAKF,GAAQ,SAAWzD,EAAcyD,GADtD,SAGGA,MALKC,OAUE,cAAfE,IACC,cAACvD,EAAD,UACE,eAACE,EAAD,WACE,cAACU,EAAD,CACE4C,QAASjC,EACTkC,gBAAkBlB,GAChBf,EAA0Be,EAAMmB,OAAOF,SAH3C,SAME,cAAC,IAAD,CAAoB/D,GAAIkE,IAAWjE,MAAM,KAAKb,OAAO,SAEvD,cAACqC,EAAD,0CAGF,SC9QJ0C,EAAoB1G,EAAO+B,EAAa,CAC5CC,aAAc,IAGV2E,EAAoB3G,EAAO,MAAO,CACtCwB,SAAU,GACVG,OAAQ,GACRK,aAAc,EACdoB,QAAS,OACTC,WAAY,SACZuD,eAAgB,SAChB,MAAO,CACL9F,UAAW,UAEb6B,SAAU,CACRkE,SAAU,CACRC,MAAO,CACL7F,MAAO,oBAMT8F,EAAoB/G,EAAO,MAAO,CACtCc,UAAW,WAGPkG,EAAkBhH,EAAOiH,IAAYC,KAAM,CAC/CvF,OAAQ,GACRyB,QAAS,eACTjB,QAAS,OACT4B,aAAc,MACd,UAAW,CACT9C,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,iBAAkB,CAChBA,MAAO,aAIEkG,EAAoB,KAC/B,MAAON,EAAUO,GAAehD,YAAe,GAEzCiD,EAAsBjD,eAC1B,EAAGQ,YACDwC,EACExC,EAAMI,OACa,gBAAjBJ,EAAMM,QACU,iBAAhBN,EAAMO,SAGZ,IAGF,OACE,eAACrD,EAAD,WACE,cAAC4E,EAAD,sBACA,cAACC,EAAD,CAAmBE,SAAUA,EAA7B,SACE,+BACGA,EACC,oCAEA,qCACE,yCADF,KACsB,+CADtB,QACoD,IAClD,uDAKR,cAACE,EAAD,UACE,cAACC,EAAD,CACEpB,cAAeyB,EACfhD,wBAAsB,EACtB2B,SAAU,EAHZ,SAKE,cAAC,IAAD,CAAiBxD,MAAO,GAAIb,OAAQ,aChFxC2F,EAAatH,EAAOiH,IAAYM,EAAG,CACvCtG,MAAO,gBAIPuG,mBAAoB,YACpBC,oBAAqB,SACrBC,oBAAqB,SACrBC,wBAAyB,YAEzB,UAAW,CACTD,oBAAqB,SACrBD,oBAAqB,SAEvB,gBAAiB,CACfC,oBAAqB,QACrBD,oBAAqB,SAEvB,cAAe,CACbC,oBAAqB,UACrBD,oBAAqB,SAEvB9E,SAAU,CACRwC,MAAO,CACLhD,QAAS,CACP,iBAAkB,CAChBA,QAAS,2BACTC,cAAe,QAGnBoB,UAAW,CAGT/C,QAAS,UACTF,OAAQ,YAKRwD,aAAc,MAEd,iBAAkB,CAChBP,UAAW,+BAKnBoE,gBAAiB,CACfzC,MAAO,eAQE0C,EAA6B,EAAGC,aAAY,KAASxF,KAChE,cAACgF,EAAD,IACMhF,EACJkE,OAAQsB,EAAY,cAAWC,EAC/BC,IAAKF,EAAY,2BAAwBC,ICzDvCE,EAAQhI,EAAU,CACtB,KAAM,CAAEiI,UAAW,YACnB,MAAO,CAAEA,UAAW,eACpB,OAAQ,CAAEA,UAAW,cAGjBC,EAAe,CACnB/E,QAAS,eACTvC,eAAgB,YAChBkD,aAAc,MACdtD,QAAS,cACTF,OAAQ,WACR,yBAA0B,CACxBU,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,cAAe,CACbA,MAAO,WAET,iBAAkB,CAChBmH,UAAU,GAAD,OAAKH,EAAL,UACTpH,eAAgB,OAChBgB,gBAAiB,oBACjB2B,UAAW,6BAMT6E,EAAarI,EAAOiH,IAAYM,EAAGY,GACnCG,EAAatI,EAAOiD,YAAkBsF,KAAkBJ,GAEjDK,EAAmB,IAE5B,eAAC1G,EAAD,WACE,cAACC,EAAD,oBACA,eAACsG,EAAD,CAAYI,KAAK,IAAjB,oCACoB,sDAEpB,eAACH,EAAD,CAAYI,GAAG,IAAf,sCACsB,+BAAO,wBAE7B,sBAAKC,MAAO,CAAEpI,OAAQ,YAAtB,qBACU,cAACsH,EAAD,CAAMY,KAAK,IAAX,yCADV,kDC9CAG,EAA6B5I,EAAO,MAAO,CAC/CgC,aAAc,KAGV6G,EAAoB7I,EAAO+B,EAAa,CAC5CqB,QAAS,eACTpB,aAAc,EACd6B,YAAa,IAGTiF,EAAuB9I,EAAOiH,IAAY8B,OAAQ,CACtD3F,QAAS,eACTvC,eAAgB,YAChBkD,aAAc,MACdtD,QAAS,cACTuI,WAAY,MAEZ,yBAA0B,CACxB/H,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,cAAe,CACbA,MAAO,WAET,iBAAkB,CAChBJ,eAAgB,OAChBgB,gBAAiB,oBACjB2B,UAAW,8BAMTyF,EAAiBjJ,EAAOiH,IAAY8B,OAAQ,CAChD3F,QAAS,QACTZ,MAAO,OACPnB,WAAY,YACZ,yBAA0B,CACxBJ,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,cAAe,CACbA,MAAO,WAET,iBAAkB,CAChBkB,QAAS,8BAIP+G,EAAqBC,MAAM,KAC9BC,KAAK,GACLnD,KAAI,CAACoD,EAAGlD,IACP,cAAC8C,EAAD,CAA0B5E,wBAAsB,EAAhD,SACG,EAAGW,QAAOE,YAAV,6BACuBiB,EAAM,GAD7B,OACiCnB,GAASE,EAAS,MAAQ,IAD3D,OAEGF,EAAQ,QAAU,IAFrB,OAGIA,GAASE,EAAS,KAAO,IAH7B,OAGkCA,GAAkB,KAJlCiB,KASZmD,EAAwB,KACnC,MAAOC,EAAgBC,GAAqBpF,YAAwB,GAEpE,OACE,eAACtC,EAAD,WACE,eAAC8G,EAAD,WACE,cAACC,EAAD,0BADF,SAEE,eAACC,EAAD,CACEjD,QAAS,IAAM2D,GAAmB3E,IAAeA,IADnD,oBAGM0E,EAAiB,SAAW,UAHlC,iCAMDA,EAAiBL,EAAqB,SChFhCH,EAAS/I,EAAOiH,IAAY8B,OAAQ,CAC/C9H,MAAO,gBACPkB,QAAS,OACT,yBAA0B,CACxBlB,MAAO,SACPsC,YAAa,UAEf,gBAAiB,CACftC,MAAO,QACPsC,YAAa,SAEf,cAAe,CACbtC,MAAO,UACPsC,YAAa,WAEfZ,SAAU,CACRwC,MAAO,CACLhD,QAAS,CACP,iBAAkB,CAChBA,QAAS,2BACTC,cAAe,QAGnBoB,UAAW,CACT,iBAAkB,CAChBA,UAAW,+BAKnBoE,gBAAiB,CACfzC,MAAO,aCtBEsE,EAAiD,EAC5D3B,aAAY,EACZ4B,SACGpH,KAEH,cAACyG,EAAD,IACMzG,EACJC,GAAI0E,IAAYM,EAChBf,OAAQsB,EAAY,cAAWC,EAC/BC,IAAKF,EAAY,2BAAwBC,EACzC5C,MAAM,YACNuE,IAAK,CACHtG,QAAS,eACTZ,MAAO,OACPb,OAAQ,OACRlB,QAAS,MACTsD,aAAc,SAEV2F,GAbR,SAgBE,cAAC,IAAD,CACElH,MAAM,KACNb,OAAO,KAGPgH,MAAO,CAAET,UAAW,qB,aC5BnB,MAAMyB,GAAiD,EAC5DD,SACGpH,MAMH,IAAIsH,EAAuB,KAC3B,IACEA,EAAkBC,aAClB,OACF,MAAMC,EAAWC,kBAAYhC,EAAW,CACtCiC,cAAe5J,EACfwJ,oBAeF,OAVAxF,aAAgB,MACS,IAAnB0F,EAASG,MAEXC,SAASC,gBAAgBxB,MAAMyB,YAAc,OAG7CF,SAASC,gBAAgBxB,MAAMyB,YAAc,UAE9C,CAACN,EAASG,QAGX,cAAClB,EAAD,IACMzG,EACJuD,QAASiE,EAASO,OAClBlF,MAAM,YACNuE,IAAK,CACHlH,MAAO,OACPb,OAAQ,OACRlB,QAAS,MACTsD,aAAc,SAEV2F,GAENY,aAAW,mBAZb,SAcE,cAAC,IAAD,CAAS9H,MAAM,KAAKb,OAAO,UC9C3B4I,GAAevK,EAAO,MAAO,CACjCwK,SAAU,QACV/J,QAAS,iBACTF,OAAQ,WAGJkK,GAAkBzK,EAAO,SAAU,CACvCoD,QAAS,OACTwD,eAAgB,gBAChB5E,aAAc,SAGV0I,GAAK1K,EAAO,KAAM,CACtBoD,QAAS,OACTC,WAAY,SACZ7B,SAAU,OACVqC,YAAa,SAGT8G,GAAsB3K,EAAO,OAAQ,CACzCwC,MAAO,OACPY,QAAS,cACTwD,eAAgB,kBAGZgE,GAAe5K,EAAO,IAAK,CAC/BO,OAAQ,WAGGsK,GAAM,IAEf,eAACN,GAAD,WACE,eAACE,GAAD,WACE,cAACC,GAAD,qCACA,eAACC,GAAD,WACE,cAAClB,EAAD,CACEa,aAAW,0CACX7B,KAAK,kDAEP,cAACkB,GAAD,UAGJ,cAACiB,GAAD,uGAIA,cAAC3G,EAAD,IACA,cAACkD,EAAD,IACA,cAACqB,EAAD,IACA,cAACc,EAAD,O,MCnDN,MAAMwB,GAAwB9K,EAAO,MAAO,CAC1CwB,SAAU,OACViC,QAAS,KAGLsH,GAGD,EAAGnG,OAASI,QAAOE,SAAQC,SAAS6F,cACvC,eAACF,GAAD,qBACS,yCAAU9F,KADnB,aAC4C,yCAAUE,KADtD,WAC+E,IAC7E,yCAAUC,KAFZ,eAEuC,yCAAU6F,QAI7CC,GAAkB7G,cAGtB,CAAC9B,EAAOyD,IAAQ,2BAAYzD,EAAOyD,IAAKA,MAEpCmF,GAAgB9G,cAIpB,CAAC9B,EAAOyD,IAAQ,sBAAOzD,EAAOyD,IAAKA,MAE/BoF,GAAe/G,cAGnB,CAAC9B,EAAOyD,IAAQ,wBAASzD,EAAOyD,IAAKA,EAAKC,SAAU,MAEhDoF,GAA4BpL,EAAO,MAAO,CAC9CS,QAAS,OACTF,OAAQ,SACRiK,SAAU,UAGNE,GAAK1K,EAAO,KAAM,CACtBwB,SAAU,OACVjB,OAAQ,WAGJuB,GAAgB9B,EAAO,MAAO,CAClCO,OAAQ,WAGJ8K,GAAiC,CACrCrG,OAAO,EACPE,QAAQ,EACRC,OAAO,GAGImG,GAA8B,KACzC,MAAOC,EAAaC,GAAkBpH,WACpCiH,KAEKI,EAAgBC,GAAqBtH,YAAwB,IAE7DuH,EAAWC,GAAgBxH,WAChCiH,KAEKQ,EAAcC,GAAmB1H,YAAwB,IAEzD2H,EAAUC,GAAe5H,WAC9BiH,KAEKY,EAAaC,GAAkB9H,YAAwB,IAG5D+H,EACAC,GACEhI,WAAiCiH,KAEnCgB,EACAC,GACElI,YAAwB,IAG1BmI,EACAC,GACEpI,WAAiCiH,KAEnCoB,EACAC,GACEtI,YAAwB,IAG1BuI,EACAC,GACExI,WAAiCiH,KAEnCwB,EACAC,GACE1I,YAAwB,GAE5B,OACE,eAACgH,GAAD,WACE,cAAC,GAAD,uDACA,gEACkC,IAChC,cAACvD,EAAD,CAAMY,KAAK,gDAAX,4BAFF,0DAOA,eAAC,GAAD,WACE,cAAC,IAAD,CACElG,GAAG,SACHyI,SAAUS,EACV5F,QAAS,IAAM6F,GAAkB,GACjC9F,cAAe,EAAGhB,WAAY4G,EAAe5G,GAC7CmI,UAAU,0BALZ,SAOE,iDAEF,cAAChC,GAAD,CAAcnG,MAAO2G,EAAaP,SAAUS,OAE9C,eAAC,GAAD,WACE,cAAC,IAAD,CACElJ,GAAG,IACHkG,KAAK,OACLuC,SAAUa,EACVhG,QAAS,IAAMiG,GAAgB,GAC/BlG,cAAe,EAAGhB,WAAYgH,EAAahH,GAC3CmI,UAAU,wBANZ,SAQE,wDAEF,cAAChC,GAAD,CAAcnG,MAAO+G,EAAWX,SAAUa,OAE5C,eAAC,GAAD,WACE,cAAC,IAAD,CACEtJ,GAAG,MACHyD,SAAU,EACVgF,SAAUiB,EACVpG,QAAS,IAAMqG,GAAe,GAC9BtG,cAAe,EAAGhB,WAAYoH,EAAYpH,GAC1CmI,UAAU,0BANZ,SAQE,yDAEF,cAAChC,GAAD,CAAcnG,MAAOmH,EAAUf,SAAUiB,OAE3C,eAAC,GAAD,WACE,cAAC,IAAD,CACE1J,GAAI0I,GACJD,SAAUqB,EACVxG,QAAS,IAAMyG,GAA2B,GAC1C1G,cAAe,EAAGhB,WAAYwH,EAAwBxH,GACtDmI,UAAU,0BALZ,SAOE,+BAAO,2BAET,cAAChC,GAAD,CACEnG,MAAOuH,EACPnB,SAAUqB,OAGd,eAAC,GAAD,WACE,cAAC,IAAD,CACE9J,GAAI2I,GACJzC,KAAK,OACLuC,SAAUyB,EACV5G,QAAS,IAAM6G,GAAyB,GACxC9G,cAAe,EAAGhB,WAAY4H,EAAsB5H,GACpDmI,UAAU,wBANZ,SAQE,+BAAO,qCAET,cAAChC,GAAD,CACEnG,MAAO2H,EACPvB,SAAUyB,OAGd,eAAC,GAAD,WACE,cAAC,IAAD,CACElK,GAAI4I,GACJH,SAAU6B,EACVhH,QAAS,IAAMiH,GAAwB,GACvClH,cAAe,EAAGhB,WAAYgI,EAAqBhI,GACnDmI,UAAU,0BALZ,SAOE,+BAAO,wBAET,cAAChC,GAAD,CACEnG,MAAO+H,EACP3B,SAAU6B,OAGd,cAAC,IAAD,CACEtK,GAAG,SACHsD,QAAS,KACP6F,GAAkB,GAClBI,GAAgB,GAChBI,GAAe,GACfI,GAA2B,GAC3BI,GAAyB,GACzBI,GAAwB,IAE1BC,UAAU,0BAVZ,yBAcA,cAAC,IAAD,CACExK,GAAG,SACHsD,QAAS,KACP6F,GAAkB,GAClBI,GAAgB,GAChBI,GAAe,GACfI,GAA2B,GAC3BI,GAAyB,GACzBI,GAAwB,IAE1BC,UAAU,0BAVZ,gCC7MAC,GAA4BhN,EAAO,MAAO,CAC9CS,QAAS,OACTF,OAAQ,SACRiK,SAAU,UAGNE,GAAK1K,EAAO,KAAM,CACtBwB,SAAU,OACVjB,OAAQ,WAGJ2C,GAAQlD,EAAO,MAAO,CAC1BO,OAAQ,eAGJ0M,GAAyB,CAC7B,yBAA0B,CACxBhM,MAAO,UAET,gBAAiB,CACfA,MAAO,SAET,cAAe,CACbA,MAAO,WAET,iBAAkB,CAChBmB,cAAe,MACfD,QAAS,6BAIP+K,GAAoBlN,EAAOiH,IAAY8B,OAAQ,CACnDtI,QAAS,MACTD,OAAQ,eACLyM,KAGCE,GAAkBnN,EAAOiH,IAAYM,EAAG,CAC5C1G,eAAgB,eACboM,KAGCG,GAAiBpN,EAAOiH,IAAYoG,IAAK,CAC7C5M,QAAS,MACTD,OAAQ,YACR2B,QAAS,UACN8K,KAGQK,GAA8B,KACzC,MAAOC,EAAUC,GAAepJ,YAAe,GAE/CA,aAAgB,KACd,MAAMqJ,EAAaC,OAAOC,aAAY,KACpCH,GAAa3I,IAAeA,IACrB,IAAM6I,OAAOE,cAAcH,KACjC,OACF,IAEH,MAAMI,EAAsBzJ,eAC1B,EAAGY,QAAOE,SAAQC,WAAlB,iBACYH,EADZ,qBAC8BE,EAD9B,oBACgDC,IAChD,IAGF,OACE,eAAC6H,GAAD,WACE,cAAC,GAAD,kCACA,mVAOA,qBAAKrE,MAAO,CAAEhH,OAAQ4L,EAAW,QAAU,SAC3C,cAACrK,GAAD,sBACA,cAAC,GAAD,CACE2C,QAAS,IAAM2H,GAAa3I,IAAeA,IAC3CR,wBAAsB,EAFxB,SAIGwJ,IAEH,cAAC3K,GAAD,oBAEA,cAACiK,GAAD,CAAiB1E,KAAK,IAAIpE,wBAAsB,EAAhD,SACGwJ,IAEH,cAAC3K,GAAD,mBAEA,cAACkK,GAAD,CACEvH,QAAS,IAAM2H,GAAa3I,IAAeA,IAC3CR,wBAAsB,EACtB2B,SAAU,EAHZ,SAKG6H,QC9EHC,GAAiB7K,YAAkB,OACnC8K,GAAwB9K,YAAkB4E,KAEnCmG,GAAqC,IAChD,qCACE,cAAC,IAAYjF,OAAb,CAEEnG,KAAK,SACLmD,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAJ5B,gCASA,cAAC,IAAY2G,EAAb,CAEEkB,KAAK,uBACL1C,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAJ5B,2BAQA,cAAC,IAAYyM,IAAb,CACEtH,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAC1BgF,cAAe,EAAGhB,QAAOC,kBAH3B,6BAOA,cAACiJ,GAAD,CAEE/H,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAC1BgF,cAAe,EAAGhB,QAAOC,kBAJ3B,4BAQA,cAACkJ,GAAD,CAEErF,GAAG,aACH3C,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAC1BgF,cAAe,EAAGhB,QAAOC,kBAL3B,sCAiBEsJ,GAAwD,CAC5D5L,GAAI,SACJK,KAAM,SACN6C,SAAU,4BACVM,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,SAItBwN,GAA+D,CACnE7L,GAAIsF,IACJa,GAAI,aACJjD,SAAU,gCACVM,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,SAItByN,GAAqC,IACzC,qCACE,cAAC,IAAD,IAAiBF,KACjB,cAAC,IAAD,IAAiBC,KACjB,cAAC,IAAD,CACE7L,GAAG,SACHK,KAAK,SACLmD,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAJ5B,mCAQA,cAAC,IAAD,CACE2B,GAAIsF,IACJa,GAAG,aACH3C,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAJ5B,oCAuBE0N,GAA+D,EACnEC,oBACGjM,KACC,cAAC,IAAD,IAAiBA,EAAOC,GAAG,WAG3BiM,GAA0BpK,cAG9B,EAAGmK,oBAAmBjM,GAASyD,IAC/B,cAAC,IAAD,IAAiBzD,EAAOC,GAAG,SAASwD,IAAKA,MAOrC0I,GAAgE,CACpEF,eAAgB,YAChB9I,SAAU,kCACVM,IAAK,OACLnD,KAAM,SACNsL,WAAY,CAAEtN,WAAY,SAGtB8N,GAAkC,IACtC,qCACE,cAACJ,GAAD,CAGE1L,KAAK,SACLsL,WAAY,CAAEtN,WAAY,QAJ5B,wCAQA,cAAC4N,GAAD,CAEEzI,IAAMkI,MACNrL,KAAK,SACLsL,WAAY,CAAEtN,WAAY,QAJ5B,qCAQA,cAAC4N,GAAD,IAA6BC,KAC7B,cAAC,IAAD,CACElM,GAAG,SAEHwD,IAAK,CAAEvB,QAAS,MAChB5B,KAAK,SACLsL,WAAY,CAAEtN,WAAY,QAL5B,sCAsBE+N,GAAcvK,cAClB,EAAGwK,yBAAwBtM,GAASyD,IAE3B,2BAAYzD,EAAOyD,IAAKA,MAc7B8I,GAAmE,EACvEN,oBACGjM,KACC,cAAC,IAAD,IAAiBA,EAAOC,GAAIoM,KAG5BG,GAA4B1K,cAGhC,EAAGmK,oBAAmBjM,GAASyD,IAC/B,cAAC,IAAD,IAAiBzD,EAAOC,GAAIoM,GAAa5I,IAAKA,MAO1CgJ,GAAoE,CACxER,eAAgB,YAChBK,oBAAqB,iBACrBnJ,SAAU,kCACVM,IAAK,OACLmI,WAAY,CAAEtN,WAAY,SAGtBoO,GAAoC,IACxC,qCACE,cAACH,GAAD,CACEN,eAAe,YACfK,oBAAoB,iBAEpBV,WAAY,CAAEtN,WAAY,QAJ5B,0CAQA,cAACkO,GAAD,CACEP,eAAe,YACfK,oBAAoB,iBACpB7I,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAJ5B,uCAQA,cAACkO,GAAD,IAA+BC,KAC/B,cAAC,IAAD,CACExM,GAAIoM,GACJC,oBAAoB,iBACpBV,WAAY,CAAEtN,WAAY,QAC1BmF,IAAMkI,MAJR,2CAqBEgB,GAAwB7K,cAG5B,CAAC9B,EAAOyD,KAGR,MAAMmJ,EAAK5M,EAAMoG,KAAOpG,EAAM0I,SAAWnD,IAAO,IAChD,IAAIsH,EAAmB7M,EACvB,GAAIA,EAAM0I,SAAU,CAClB,MAAM,GAAEtC,EAAF,QAAM0G,KAAYC,GAA4B/M,EACpD6M,EAAmBE,EAGrB,OAAO,cAAC,IAAD,IAAiBF,EAAkB5M,GAAI2M,EAAInJ,IAAKA,OAMnDuJ,GAA4D,CAChEvJ,IAAMkI,MACNxF,KAAM,uBAENhD,SAAU,gCACVyI,WAAY,CAAEtN,WAAY,SAGtB2O,GAAuC,IAC3C,qCACE,cAACN,GAAD,CACEvG,GAAG,aACH0G,SAAO,EAEPrJ,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAL5B,8CASA,cAACqO,GAAD,CACEjE,UAAQ,EACRtC,GAAG,aACH0G,SAAO,EACPrJ,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAC1B4O,cAAe,CAAE/L,QAAS,IAN5B,uDAUA,cAACwL,GAAD,CACExG,KAAK,uBAGL1C,IAAMkI,MACNC,WAAY,CAAEtN,WAAY,QAL5B,8CASA,cAACqO,GAAD,IAA2BK,QAMzBG,GAAezP,EAAO,MAAO,CACjC,MAAO,CACLoD,QAAS,SAEX,OAAQ,CACN5B,SAAU,UAIDkO,GAAgC,IAC3C,cAAC,IAAD,UACE,eAACD,GAAD,WACE,qDACA,cAACzB,GAAD,IACA,cAACK,GAAD,IACA,cAACK,GAAD,IACA,cAACM,GAAD,IACA,cAACO,GAAD,SC3VOI,GAAQ,KACnBtP,IAGE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuP,OAAK,EAACC,KAAK,IAAIC,UAAWjF,KACjC,cAAC,IAAD,CAAOgF,KAAK,sBAAsBC,UAAWxE,KAC7C,cAAC,IAAD,CAAOuE,KAAK,uBAAuBC,UAAWxC,KAC9C,cAAC,IAAD,CAAOuC,KAAK,cAAcC,UAAWJ,KACrC,cAAC,IAAD,CAAOK,OAAQ,IAAM,cAAC,IAAD,CAAUrH,GAAG,cAM1CsH,IAASD,OACP,cAAC,aAAD,UACE,cAACJ,GAAD,MAEFzF,SAAS+F,eAAe,W","file":"static/js/main.77d3574e.chunk.js","sourcesContent":["import { createCss, StitchesCss } from '@stitches/react';\n\nexport const stitchesConfig = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,30%)',\n      outlineGreen: 'hsl(120,40%,55%)',\n      blue: 'hsl(240,100%,50%)',\n      outlineBlue: 'hsl(240,100%,70%)',\n      purple: 'hsl(270,100%,60%)',\n      backgroundPurple: 'hsl(270,100%,92%)',\n    },\n  },\n});\n\nexport type CSS = StitchesCss<typeof stitchesConfig>;\n\nexport const {\n  styled,\n  theme,\n  keyframes,\n  global: createGlobalCss,\n} = stitchesConfig;\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    outlineGreen: 'hsl(120,80%,30%)',\n    blue: 'hsl(210,100%,60%)',\n    outlineBlue: 'hsl(210,80%,40%)',\n    purple: 'hsl(270,85%,60%)',\n    backgroundPurple: 'hsl(270,100%,15%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  // unset all styles on interactive elements\n  'button, input, select, textarea, a, area': {\n    all: 'unset',\n  },\n  // normalize behavior on all elements\n  '*, *::before, *::after, button, input, select, textarea, a, area': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    lineHeight: 'inherit',\n    wordBreak: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  // set base styles for the app\n  body: {\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    // use word-break instead of \"overflow-wrap: anywhere\" because of Safari support\n    wordBreak: 'break-word',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  // pass down height: 100% to the #root div\n  'body, html': {\n    height: '100%',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { styled } from '../stitches.config';\n\nexport const DemoContainer = styled('div', {\n  margin: '24px 0',\n});\n\nexport const DemoHeading = styled('h2', {\n  fontSize: '22px',\n  marginBottom: '10px',\n});\n","import * as React from 'react';\nimport { deviceType } from 'detect-it';\nimport {\n  Interactive,\n  createInteractive,\n  eventFrom,\n  InteractiveExtendableProps,\n  InteractiveState,\n  InteractiveStateChange,\n} from 'react-interactive';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport * as Label from '@radix-ui/react-label';\nimport { CheckIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst StateLogContainer = styled('div', {\n  height: '200px',\n  padding: '0 5px',\n  border: '1px solid $highContrast',\n  overflowY: 'scroll',\n  fontFamily: 'monospace',\n  outline: 'none',\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst InteractiveButton: React.VFC<InteractiveExtendableProps<'button'>> = (\n  props,\n) => <Interactive {...props} as=\"button\" />;\n\nconst DemoButton = styled(InteractiveButton, {\n  fontFamily: 'monospace',\n  fontSize: '20px',\n  textAlign: 'center',\n  width: '100%',\n  minHeight: '50px',\n  border: '1px solid',\n  marginBottom: '5px',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromTouch': {\n    outline: '3px solid $colors$outlineBlue',\n    outlineOffset: '1px',\n  },\n  '&.focusFromMouse': {\n    outline: '3px solid $colors$outlineGreen',\n    outlineOffset: '1px',\n  },\n  '&.focusFromKey': {\n    outline: '3px solid $colors$purple',\n    outlineOffset: '1px',\n  },\n});\n\nconst variantLookup: Record<string, any> = {\n  'hover: true': 'green',\n  'hover: false': 'normal',\n  'active: mouseActive': 'green',\n  'active: touchActive': 'blue',\n  'active: keyActive': 'purple',\n  'active: false': 'normal',\n  'focus: focusFromMouse': 'green',\n  'focus: focusFromTouch': 'blue',\n  'focus: focusFromKey': 'purple',\n  'focus: false': 'normal',\n};\n\nconst InfoType = styled('span', {\n  color: '$lowContrast',\n  variants: {\n    type: {\n      normal: { color: '$lowContrast' },\n      green: { color: '$green' },\n      blue: { color: '$blue' },\n      purple: { color: '$purple' },\n      orange: { color: '$orange' },\n    },\n  },\n});\n\nconst ExtendedTouchActiveOptionContainer = styled('div', {\n  marginTop: '10px',\n});\n\nconst ExtendedTouchActiveOptionLabel = styled(createInteractive(Label.Root), {\n  cursor: 'pointer',\n  fontSize: '18px',\n  display: 'inline-flex',\n  alignItems: 'center',\n  // required to set vertical-align because display is inline\n  // and it contains an empty button (the checkbox when un-checked)\n  // see https://stackoverflow.com/questions/21645695/button-element-without-text-causes-subsequent-buttons-to-be-positioned-wrong\n  verticalAlign: 'top',\n\n  // style Checkbox (which renders a button) when label is hovered/active\n  '&.hover>button, &.mouseActive>button': {\n    color: '$green',\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.touchActive>button': {\n    color: '$blue',\n    borderColor: '$blue',\n    boxShadow: '0 0 0 1px $colors$blue',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n  // required because of radix checkbox bug: https://github.com/radix-ui/primitives/issues/605\n  '&>input': {\n    display: 'none',\n  },\n});\n\nconst ExtendedTouchActiveOptionCheckbox = styled(\n  createInteractive(Checkbox.Root),\n  {\n    flexShrink: 0,\n    marginRight: '4px',\n    appearance: 'none',\n    border: '1px solid $highContrast',\n    width: '32px',\n    height: '32px',\n    borderRadius: '2px',\n    // hover and active are styled in LabelBase so styles are applied when label is hovered/active\n    // '&.hover, &.active': {...},\n    '&.focusFromKey': {\n      outline: 'none',\n      // !important required so hover and active styles from Label are not applied\n      // to border and boxShadow when in the focusFromKey state\n      borderColor: '$purple !important',\n      boxShadow: '0 0 0 1px $colors$purple !important',\n    },\n    '&.keyActive': {\n      color: '$purple',\n    },\n  },\n);\n\nconst CodeBlock = styled('code', {\n  backgroundColor: '$backgroundContrast',\n  marginTop: '2px',\n  padding: '4px 6px 4px',\n  borderRadius: '5px',\n});\n\nexport const StateLog: React.VFC = () => {\n  const [stateLog, setStateLog] = React.useState<string[]>([]);\n  const [\n    useExtendedTouchActive,\n    setUseExtendedTouchActive,\n  ] = React.useState<boolean>(false);\n\n  const logContainerElement = React.useRef<HTMLDivElement>(null!);\n\n  React.useEffect(() => {\n    if (logContainerElement.current) {\n      logContainerElement.current.scrollTop =\n        logContainerElement.current.scrollHeight;\n    }\n  }, [stateLog]);\n\n  const handleInteractiveStateChange = React.useCallback(\n    ({ state, prevState }: InteractiveStateChange) => {\n      setStateLog((prevLog) => {\n        const log = [...prevLog];\n        if (state.hover !== prevState.hover) {\n          log.push(`hover: ${state.hover}`);\n        }\n        if (state.active !== prevState.active) {\n          log.push(`active: ${state.active}`);\n        }\n        if (state.focus !== prevState.focus) {\n          log.push(`focus: ${state.focus}`);\n        }\n        return log;\n      });\n    },\n    [],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const handleDoubleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setStateLog((prevLog) => [\n        ...prevLog,\n        `double click eventFrom ${eventFrom(event)}`,\n      ]);\n    },\n    [],\n  );\n\n  const childrenAsAFunction = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) => {\n      const children: string[] = [];\n      if (hover) {\n        children.push('hover');\n      }\n      if (active) {\n        children.push(active);\n      }\n      if (focus) {\n        children.push(focus);\n      }\n      if (children.length === 0) {\n        children.push('normal');\n      }\n      return children.join(', ');\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer>\n      <DemoHeading>Interactive State Log</DemoHeading>\n      <DemoButton\n        onStateChange={handleInteractiveStateChange}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        useExtendedTouchActive={useExtendedTouchActive}\n      >\n        {childrenAsAFunction}\n      </DemoButton>\n      <Interactive\n        as={StateLogContainer}\n        ref={logContainerElement}\n        tabIndex={0}\n      >\n        {stateLog.map((item, idx) => (\n          <div key={idx}>\n            <InfoType>{idx + 1}</InfoType>{' '}\n            <InfoType\n              type={/click/.test(item) ? 'orange' : variantLookup[item]}\n            >\n              {item}\n            </InfoType>\n          </div>\n        ))}\n      </Interactive>\n      {deviceType !== 'mouseOnly' ? (\n        <ExtendedTouchActiveOptionContainer>\n          <ExtendedTouchActiveOptionLabel>\n            <ExtendedTouchActiveOptionCheckbox\n              checked={useExtendedTouchActive}\n              onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setUseExtendedTouchActive(event.target.checked)\n              }\n            >\n              <Checkbox.Indicator as={CheckIcon} width=\"30\" height=\"30\" />\n            </ExtendedTouchActiveOptionCheckbox>\n            <CodeBlock>useExtendedTouchActive</CodeBlock>\n          </ExtendedTouchActiveOptionLabel>\n        </ExtendedTouchActiveOptionContainer>\n      ) : null}\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveStateChange } from 'react-interactive';\nimport { InfoCircledIcon } from '@radix-ui/react-icons';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst ShowOnDemoHeading = styled(DemoHeading, {\n  marginBottom: 0,\n});\n\nconst InfoTextContainer = styled('div', {\n  fontSize: 18,\n  height: 52,\n  marginBottom: 4,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '&>*': {\n    textAlign: 'center',\n  },\n  variants: {\n    showInfo: {\n      false: {\n        color: '$lowContrast',\n      },\n    },\n  },\n});\n\nconst InfoIconContainer = styled('div', {\n  textAlign: 'center',\n});\n\nconst InteractiveInfo = styled(Interactive.Span, {\n  height: 30,\n  display: 'inline-block',\n  outline: 'none',\n  borderRadius: '50%',\n  '&.hover': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.focusFromKey': {\n    color: '$purple',\n  },\n});\n\nexport const ShowOn: React.VFC = () => {\n  const [showInfo, setShowInfo] = React.useState(false);\n\n  const handleOnStateChange = React.useCallback(\n    ({ state }: InteractiveStateChange) => {\n      setShowInfo(\n        state.hover ||\n          state.active === 'touchActive' ||\n          state.focus === 'focusFromKey',\n      );\n    },\n    [],\n  );\n\n  return (\n    <DemoContainer>\n      <ShowOnDemoHeading>Show On</ShowOnDemoHeading>\n      <InfoTextContainer showInfo={showInfo}>\n        <span>\n          {showInfo ? (\n            'Some info to show about something'\n          ) : (\n            <>\n              <code>hover</code>, <code>touchActive</code>, and{' '}\n              <code>focusFromKey</code>\n            </>\n          )}\n        </span>\n      </InfoTextContainer>\n      <InfoIconContainer>\n        <InteractiveInfo\n          onStateChange={handleOnStateChange}\n          useExtendedTouchActive\n          tabIndex={0}\n        >\n          <InfoCircledIcon width={30} height={30} />\n        </InteractiveInfo>\n      </InfoIconContainer>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nconst StyledLink = styled(Interactive.A, {\n  color: '$highContrast',\n\n  // can't use shorthand for textDecoration because of bug in Safari v14\n  // textDecoration: 'underline $colors$green dotted from-font',\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'dotted',\n  textDecorationColor: '$green',\n  textDecorationThickness: 'from-font',\n\n  '&.hover': {\n    textDecorationColor: '$green',\n    textDecorationStyle: 'solid',\n  },\n  '&.touchActive': {\n    textDecorationColor: '$blue',\n    textDecorationStyle: 'solid',\n  },\n  '&.keyActive': {\n    textDecorationColor: '$purple',\n    textDecorationStyle: 'solid',\n  },\n  variants: {\n    focus: {\n      outline: {\n        '&.focusFromKey': {\n          outline: '2px solid $colors$purple',\n          outlineOffset: '2px',\n        },\n      },\n      boxShadow: {\n        // padding used to provide offset for boxShadow\n        // margin undoes padding for page layout so boxShadow works like outline\n        padding: '2px 3px',\n        margin: '-2px -3px',\n\n        // this is the main reason to use boxShadow instead of outline\n        // with outline can only have square corners,\n        // with boxShadow can use borderRadius to soften the corners\n        borderRadius: '3px',\n\n        '&.focusFromKey': {\n          boxShadow: '0 0 0 2px $colors$purple',\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    focus: 'boxShadow',\n  },\n});\n\ninterface LinkProps extends React.ComponentPropsWithoutRef<typeof StyledLink> {\n  newWindow?: boolean;\n}\n\nexport const Link: React.VFC<LinkProps> = ({ newWindow = true, ...props }) => (\n  <StyledLink\n    {...props}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n  />\n);\n","import * as React from 'react';\nimport { Interactive, createInteractive } from 'react-interactive';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { Link } from '../ui/Link';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled, keyframes, CSS } from '../stitches.config';\n\nconst scale = keyframes({\n  '0%': { transform: 'scale(1)' },\n  '50%': { transform: 'scale(1.03)' },\n  '100%': { transform: 'scale(1)' },\n});\n\nconst linkCss: CSS = {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  borderRadius: '3px',\n  padding: '3px 4px 2px',\n  margin: '1px -4px',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    animation: `${scale} 500ms`,\n    textDecoration: 'none',\n    backgroundColor: '$backgroundPurple',\n    boxShadow: '0 0 0 1px $colors$purple',\n    // adds a 3D drop shadow as well\n    // boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n};\n\nconst AnchorLink = styled(Interactive.A, linkCss);\nconst RouterLink = styled(createInteractive(ReactRouterLink), linkCss);\n\nexport const Links: React.VFC = () => {\n  return (\n    <DemoContainer>\n      <DemoHeading>Links</DemoHeading>\n      <AnchorLink href=\"#\">\n        Anchor tag link – <code>as=\"a\" href=\"#\"</code>\n      </AnchorLink>\n      <RouterLink to=\"/\">\n        React Router link – <code>{'as={Link} to=\"/\"'}</code>\n      </RouterLink>\n      <div style={{ margin: '10px 0  ' }}>\n        Another <Link href=\"#\">link with different styling</Link> that appears\n        in the middle of some text.\n      </div>\n    </DemoContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { DemoContainer, DemoHeading } from '../ui/DemoContainer';\nimport { styled } from '../stitches.config';\n\nconst StressTestHeadingContainer = styled('div', {\n  marginBottom: 10,\n});\n\nconst StressTestHeading = styled(DemoHeading, {\n  display: 'inline-block',\n  marginBottom: 0,\n  marginRight: 8,\n});\n\nconst ShowStressTestButton = styled(Interactive.Button, {\n  display: 'inline-block',\n  textDecoration: 'underline',\n  borderRadius: '3px',\n  padding: '3px 4px 2px',\n  marginLeft: '3px',\n\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    textDecoration: 'none',\n    backgroundColor: '$backgroundPurple',\n    boxShadow: '0 0 0 1px $colors$purple',\n    // adds a 3D drop shadow as well\n    // boxShadow: '0 0 0 1px $colors$purple, 2px 3px 4px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\nconst StressTestItem = styled(Interactive.Button, {\n  display: 'block',\n  width: '100%',\n  fontFamily: 'monospace',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n  },\n});\n\nconst ArrayOfInteractive = Array(500)\n  .fill(1)\n  .map((_, idx) => (\n    <StressTestItem key={idx} useExtendedTouchActive>\n      {({ hover, active }: InteractiveState) =>\n        `Interactive button ${idx + 1}${hover || active ? ' - ' : ''}${\n          hover ? 'hover' : ''\n        }${hover && active ? ', ' : ''}${active ? active : ''}`\n      }\n    </StressTestItem>\n  ));\n\nexport const StressTest: React.VFC = () => {\n  const [showStressTest, setShowStressTest] = React.useState<boolean>(false);\n\n  return (\n    <DemoContainer>\n      <StressTestHeadingContainer>\n        <StressTestHeading>Stress Test</StressTestHeading>–\n        <ShowStressTestButton\n          onClick={() => setShowStressTest((prevState) => !prevState)}\n        >\n          {`${showStressTest ? 'remove' : 'create'}`} 500 Interactive buttons\n        </ShowStressTestButton>\n      </StressTestHeadingContainer>\n      {showStressTest ? ArrayOfInteractive : null}\n    </DemoContainer>\n  );\n};\n","import { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nexport const Button = styled(Interactive.Button, {\n  color: '$highContrast',\n  outline: 'none',\n  '&.hover, &.mouseActive': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n    borderColor: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n    borderColor: '$purple',\n  },\n  variants: {\n    focus: {\n      outline: {\n        '&.focusFromKey': {\n          outline: '2px solid $colors$purple',\n          outlineOffset: '2px',\n        },\n      },\n      boxShadow: {\n        '&.focusFromKey': {\n          boxShadow: '0 0 0 2px $colors$purple',\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    focus: 'outline',\n  },\n});\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { GitHubLogoIcon } from '@radix-ui/react-icons';\nimport { Button } from './Button';\n\ninterface GitHubIconLinkProps {\n  href?: string;\n  'aria-label'?: string;\n  newWindow?: boolean;\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const GitHubIconLink: React.VFC<GitHubIconLinkProps> = ({\n  newWindow = true,\n  css,\n  ...props\n}) => (\n  <Button\n    {...props}\n    as={Interactive.A}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n    focus=\"boxShadow\"\n    css={{\n      display: 'inline-block',\n      width: '36px',\n      height: '36px',\n      padding: '3px',\n      borderRadius: '50%',\n      // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n      ...(css as any),\n    }}\n  >\n    <GitHubLogoIcon\n      width=\"30\"\n      height=\"30\"\n      // scale up the svg icon because it doesn't fill the view box\n      // see: https://github.com/radix-ui/icons/issues/73\n      style={{ transform: 'scale(1.1278)' }}\n    />\n  </Button>\n);\n","import * as React from 'react';\nimport { SunIcon } from '@radix-ui/react-icons';\nimport useDarkMode from 'use-dark-mode';\nimport { Button } from './Button';\nimport { darkThemeClass } from '../stitches.config';\n\ninterface DarkModeButtonProps {\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const DarkModeButton: React.VFC<DarkModeButtonProps> = ({\n  css,\n  ...props\n}) => {\n  // put a try catch around localStorage so this app will work in codesandbox\n  // when the user blocks third party cookies in chrome,\n  // which results in a security error when useDarkMode tries to access localStorage\n  // see https://github.com/codesandbox/codesandbox-client/issues/5397\n  let storageProvider: any = null;\n  try {\n    storageProvider = localStorage;\n  } catch {}\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n    storageProvider,\n  });\n\n  // add color-scheme style to <html> element\n  // so document scroll bars will have native dark mode styling\n  React.useEffect(() => {\n    if (darkMode.value === true) {\n      // @ts-ignore because colorScheme type not added yet\n      document.documentElement.style.colorScheme = 'dark';\n    } else {\n      // @ts-ignore\n      document.documentElement.style.colorScheme = 'light';\n    }\n  }, [darkMode.value]);\n\n  return (\n    <Button\n      {...props}\n      onClick={darkMode.toggle}\n      focus=\"boxShadow\"\n      css={{\n        width: '36px',\n        height: '36px',\n        padding: '3px',\n        borderRadius: '50%',\n        // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n        ...(css as any),\n      }}\n      aria-label=\"Toggle dark mode\"\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Button>\n  );\n};\n","import { StateLog } from './demos/StateLog';\nimport { ShowOn } from './demos/ShowOn';\nimport { Links } from './demos/Links';\nimport { StressTest } from './demos/StressTest';\nimport { styled } from './stitches.config';\nimport { GitHubIconLink } from './ui/GitHubIconLink';\nimport { DarkModeButton } from './ui/DarkModeButton';\n\nconst AppContainer = styled('div', {\n  maxWidth: '500px',\n  padding: '10px 15px 25px',\n  margin: '0 auto',\n});\n\nconst HeaderContainer = styled('header', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '20px',\n});\n\nconst H1 = styled('h1', {\n  display: 'flex',\n  alignItems: 'center',\n  fontSize: '26px',\n  marginRight: '10px',\n});\n\nconst HeaderIconContainer = styled('span', {\n  width: '80px',\n  display: 'inline-flex',\n  justifyContent: 'space-between',\n});\n\nconst DemoInfoText = styled('p', {\n  margin: '20px 0',\n});\n\nexport const App = () => {\n  return (\n    <AppContainer>\n      <HeaderContainer>\n        <H1>React Interactive Demo</H1>\n        <HeaderIconContainer>\n          <GitHubIconLink\n            aria-label=\"GitHub repository for React Interactive\"\n            href=\"https://github.com/rafgraph/react-interactive\"\n          />\n          <DarkModeButton />\n        </HeaderIconContainer>\n      </HeaderContainer>\n      <DemoInfoText>\n        Try out this demo on both mouse and touch devices, and test the keyboard\n        navigation too!\n      </DemoInfoText>\n      <StateLog />\n      <ShowOn />\n      <Links />\n      <StressTest />\n    </AppContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { Link } from '../ui/Link';\nimport { styled } from '../stitches.config';\nimport './DisabledEdgeCase.css';\n\nconst DisplayStateContainer = styled('div', {\n  fontSize: '14px',\n  opacity: 0.5,\n});\n\nconst DisplayState: React.VFC<{\n  state: InteractiveState;\n  disabled: boolean;\n}> = ({ state: { hover, active, focus }, disabled }) => (\n  <DisplayStateContainer>\n    hover: <code>{`${hover}`}</code>, active: <code>{`${active}`}</code>, focus:{' '}\n    <code>{`${focus}`}</code>, disabled: <code>{`${disabled}`}</code>\n  </DisplayStateContainer>\n);\n\nconst ButtonComponent = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentPropsWithoutRef<'button'>\n>((props, ref) => <button {...props} ref={ref} />);\n\nconst LinkComponent = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'>\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n>((props, ref) => <a {...props} ref={ref} />);\n\nconst DivComponent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'>\n>((props, ref) => <div {...props} ref={ref} tabIndex={0} />);\n\nconst DisabledEdgeCaseContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst DemoContainer = styled('div', {\n  margin: '20px 0',\n});\n\nconst initialState: InteractiveState = {\n  hover: false,\n  active: false,\n  focus: false,\n};\n\nexport const DisabledEdgeCase: React.VFC = () => {\n  const [buttonState, setButtonState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [buttonDisabled, setButtonDisabled] = React.useState<boolean>(false);\n\n  const [linkState, setLinkState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [linkDisabled, setLinkDisabled] = React.useState<boolean>(false);\n\n  const [divState, setDivState] = React.useState<InteractiveState>(\n    initialState,\n  );\n  const [divDisabled, setDivDisabled] = React.useState<boolean>(false);\n\n  const [\n    buttonComponentState,\n    setButtonComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    buttonComponentDisabled,\n    setButtonComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    linkComponentState,\n    setLinkComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    linkComponentDisabled,\n    setLinkComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  const [\n    divComponentState,\n    setDivComponentState,\n  ] = React.useState<InteractiveState>(initialState);\n  const [\n    divComponentDisabled,\n    setDivComponentDisabled,\n  ] = React.useState<boolean>(false);\n\n  return (\n    <DisabledEdgeCaseContainer>\n      <H1>Clicking the button/link/div disables it</H1>\n      <p>\n        Check for edge cases related to{' '}\n        <Link href=\"https://github.com/facebook/react/issues/9142\">\n          this React bug\n        </Link>\n        , which is fixed/worked around in React Interactive.\n      </p>\n      <DemoContainer>\n        <Interactive\n          as=\"button\"\n          disabled={buttonDisabled}\n          onClick={() => setButtonDisabled(true)}\n          onStateChange={({ state }) => setButtonState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>as=\"button\"</code>\n        </Interactive>\n        <DisplayState state={buttonState} disabled={buttonDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"a\"\n          href=\"#top\"\n          disabled={linkDisabled}\n          onClick={() => setLinkDisabled(true)}\n          onStateChange={({ state }) => setLinkState(state)}\n          className=\"DisabledEdgeCase-link\"\n        >\n          <code>as=\"a\" href=\"#top\"</code>\n        </Interactive>\n        <DisplayState state={linkState} disabled={linkDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as=\"div\"\n          tabIndex={0}\n          disabled={divDisabled}\n          onClick={() => setDivDisabled(true)}\n          onStateChange={({ state }) => setDivState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>as=\"div\" tabIndex=0</code>\n        </Interactive>\n        <DisplayState state={divState} disabled={divDisabled} />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={ButtonComponent}\n          disabled={buttonComponentDisabled}\n          onClick={() => setButtonComponentDisabled(true)}\n          onStateChange={({ state }) => setButtonComponentState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>{'as={ButtonComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={buttonComponentState}\n          disabled={buttonComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={LinkComponent}\n          href=\"#top\"\n          disabled={linkComponentDisabled}\n          onClick={() => setLinkComponentDisabled(true)}\n          onStateChange={({ state }) => setLinkComponentState(state)}\n          className=\"DisabledEdgeCase-link\"\n        >\n          <code>{'as={LinkComponent} href=\"#top\"'}</code>\n        </Interactive>\n        <DisplayState\n          state={linkComponentState}\n          disabled={linkComponentDisabled}\n        />\n      </DemoContainer>\n      <DemoContainer>\n        <Interactive\n          as={DivComponent}\n          disabled={divComponentDisabled}\n          onClick={() => setDivComponentDisabled(true)}\n          onStateChange={({ state }) => setDivComponentState(state)}\n          className=\"DisabledEdgeCase-button\"\n        >\n          <code>{'as={DivComponent}'}</code>\n        </Interactive>\n        <DisplayState\n          state={divComponentState}\n          disabled={divComponentDisabled}\n        />\n      </DemoContainer>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(true);\n          setLinkDisabled(true);\n          setDivDisabled(true);\n          setButtonComponentDisabled(true);\n          setLinkComponentDisabled(true);\n          setDivComponentDisabled(true);\n        }}\n        className=\"DisabledEdgeCase-button\"\n      >\n        Disable all\n      </Interactive>\n      <Interactive\n        as=\"button\"\n        onClick={() => {\n          setButtonDisabled(false);\n          setLinkDisabled(false);\n          setDivDisabled(false);\n          setButtonComponentDisabled(false);\n          setLinkComponentDisabled(false);\n          setDivComponentDisabled(false);\n        }}\n        className=\"DisabledEdgeCase-button\"\n      >\n        Un-disable all\n      </Interactive>\n    </DisabledEdgeCaseContainer>\n  );\n};\n","import * as React from 'react';\nimport { Interactive, InteractiveState } from 'react-interactive';\nimport { styled, CSS } from '../stitches.config';\n\nconst PageJumpEdgeCaseContainer = styled('div', {\n  padding: '20px',\n  margin: '0 auto',\n  maxWidth: '600px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '20px',\n  margin: '10px 0',\n});\n\nconst Label = styled('div', {\n  margin: '20px 0 5px',\n});\n\nconst interactiveStyles: CSS = {\n  '&.hover, &.mouseActive': {\n    color: '$green',\n  },\n  '&.touchActive': {\n    color: '$blue',\n  },\n  '&.keyActive': {\n    color: '$purple',\n  },\n  '&.focusFromKey': {\n    outlineOffset: '2px',\n    outline: '2px solid $colors$purple',\n  },\n};\n\nconst InteractiveButton = styled(Interactive.Button, {\n  padding: '5px',\n  border: '1px solid',\n  ...interactiveStyles,\n});\n\nconst InteractiveLink = styled(Interactive.A, {\n  textDecoration: 'underline',\n  ...interactiveStyles,\n});\n\nconst InteractiveDiv = styled(Interactive.Div, {\n  padding: '5px',\n  border: '1px solid',\n  outline: 'none',\n  ...interactiveStyles,\n});\n\nexport const PageJumpEdgeCase: React.VFC = () => {\n  const [jumpPage, setJumpPage] = React.useState(false);\n\n  React.useEffect(() => {\n    const intervalId = window.setInterval(() => {\n      setJumpPage((prevState) => !prevState);\n      return () => window.clearInterval(intervalId);\n    }, 5000);\n  }, []);\n\n  const interactiveChildren = React.useCallback(\n    ({ hover, active, focus }: InteractiveState) =>\n      `hover: ${hover}, active: ${active}, focus: ${focus}`,\n    [],\n  );\n\n  return (\n    <PageJumpEdgeCaseContainer>\n      <H1>Page Jump Edge Case</H1>\n      <p>\n        The content will jump down the page every 5 seconds, and then jump back.\n        Alternatively, clicking the button or div will jump the page instantly.\n        This simulates the page layout changing (external content is loaded,\n        etc), and tests how React Interactive handles a page jump when it's in\n        an interactive state.\n      </p>\n      <div style={{ height: jumpPage ? '150px' : '0px' }}></div>\n      <Label>Button:</Label>\n      <InteractiveButton\n        onClick={() => setJumpPage((prevState) => !prevState)}\n        useExtendedTouchActive\n      >\n        {interactiveChildren}\n      </InteractiveButton>\n      <Label>Link:</Label>\n\n      <InteractiveLink href=\"#\" useExtendedTouchActive>\n        {interactiveChildren}\n      </InteractiveLink>\n      <Label>Div:</Label>\n\n      <InteractiveDiv\n        onClick={() => setJumpPage((prevState) => !prevState)}\n        useExtendedTouchActive\n        tabIndex={0}\n      >\n        {interactiveChildren}\n      </InteractiveDiv>\n    </PageJumpEdgeCaseContainer>\n  );\n};\n","import * as React from 'react';\nimport {\n  Interactive,\n  createInteractive,\n  InteractiveProps,\n  InteractiveExtendableProps,\n} from 'react-interactive';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { styled } from '../stitches.config';\n\n// TS demos in this file:\n// <DemoCreateInteractiveAs />\n// <DemoPropsForInteractive />\n// <DemoComposeAsTagName />\n// <DemoComposeAsComponent />\n// <DemoComposeAsUnion />\n\n////////////////////////////////////\n// using createInteractive(as) to extend <Interactive>\n// and predefined Interactive.Tagname components\n\nconst InteractiveNav = createInteractive('nav');\nconst InteractiveRouterLink = createInteractive(Link);\n\nexport const DemoCreateInteractiveAs: React.VFC = () => (\n  <>\n    <Interactive.Button\n      // as=\"button\" // should error\n      type=\"submit\" // button specific prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      // foo // should error\n    >\n      Interactive.Button\n    </Interactive.Button>\n    <Interactive.A\n      // as=\"a\" // should error\n      href=\"https://rafgraph.dev\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive.A\n    </Interactive.A>\n    <Interactive.Div\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      Interactive.Div\n    </Interactive.Div>\n    <InteractiveNav\n      // as=\"nav\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveNav\n    </InteractiveNav>\n    <InteractiveRouterLink\n      // as={Link} // should error\n      to=\"/some-path\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      onStateChange={({ state, prevState }) => {}}\n    >\n      InteractiveRouterLink\n    </InteractiveRouterLink>\n  </>\n);\n\n////////////////////////////////////\n// typing props passed to <Interactive>\n// use type InteractiveProps\n\n// props object passed to <Interactive>, InteractiveProps includes types for `as` and `ref`\nconst propsForInteractiveButton: InteractiveProps<'button'> = {\n  as: 'button',\n  type: 'submit', // button specific prop\n  children: 'propsForInteractiveButton',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst propsForInteractiveRouterLink: InteractiveProps<typeof Link> = {\n  as: Link,\n  to: '/some-path', // Link specific prop\n  children: 'propsForInteractiveRouterLink',\n  ref: (element) => {},\n  hoverStyle: { fontWeight: 'bold' },\n  // foo: true, // should error\n};\n\nconst DemoPropsForInteractive: React.VFC = () => (\n  <>\n    <Interactive {...propsForInteractiveButton} />\n    <Interactive {...propsForInteractiveRouterLink} />\n    <Interactive\n      as=\"button\"\n      type=\"submit\" // button specific prop\n      ref={(element: HTMLButtonElement | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n    <Interactive\n      as={Link}\n      to=\"/some-path\"\n      ref={(element: React.ElementRef<typeof Link> | null) => {}} // element type is not inferred, see https://github.com/kripod/react-polymorphic-types/issues/5\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-Link\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as=\"button\" with pass through props\n// use type InteractiveExtendableProps\n\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsTagNameProps extends InteractiveExtendableProps<'button'> {\n  additionalProp?: string;\n}\n\n// as=\"button\" without ref\nconst ComposeAsTagNameWithoutRef: React.VFC<ComposeAsTagNameProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as=\"button\" />;\n\n// as=\"button\" with ref\nconst ComposeAsTagNameWithRef = React.forwardRef<\n  HTMLButtonElement,\n  ComposeAsTagNameProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as=\"button\" ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsTagNameWithRef\ntype ComposeAsTagNameWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsTagNameWithRef\n>;\nconst propsForComposeAsTagNameWithRef: ComposeAsTagNameWithRefProps = {\n  additionalProp: 'something',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  type: 'submit', // button specific prop\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsTagName: React.VFC = () => (\n  <>\n    <ComposeAsTagNameWithoutRef\n      // as=\"button\" // should error\n      // ref={(element) => {}} // should error\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithoutRef\n    </ComposeAsTagNameWithoutRef>\n    <ComposeAsTagNameWithRef\n      // as=\"button\" // should error\n      ref={(element) => {}}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsTagNameWithRef\n    </ComposeAsTagNameWithRef>\n    <ComposeAsTagNameWithRef {...propsForComposeAsTagNameWithRef} />\n    <Interactive\n      as=\"button\"\n      // ref={(element: HTMLButtonElement | null) => {}}\n      ref={{ current: null }}\n      type=\"submit\" // button specific prop\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      Interactive-as-button\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as={Component} with pass through props\n// use type InteractiveExtendableProps\n\n// first create a composable component to use for the `as` prop\n// (or use a component from a composable library such as React Router's <Link>)\n// the composable component needs to pass through props and ref using React.forwardRef\ninterface MyComponentProps extends React.ComponentPropsWithoutRef<'button'> {\n  someMyComponentProp?: string;\n}\nconst MyComponent = React.forwardRef<HTMLButtonElement, MyComponentProps>(\n  ({ someMyComponentProp, ...props }, ref) => {\n    // component logic...\n    return <button {...props} ref={ref} />;\n  },\n);\n\n// next create the interface for the component that wraps the <Interactive> component,\n// the same props interface is used for composing with and without forwardRef\n// note that InteractiveExtendableProps doesn't include `as` or `ref` props\n// when using forwardRef the ref type will be added by the forwardRef function\ninterface ComposeAsComponentProps\n  extends InteractiveExtendableProps<typeof MyComponent> {\n  additionalProp?: string;\n}\n\n// as={Component} without ref\nconst ComposeAsComponentWithoutRef: React.VFC<ComposeAsComponentProps> = ({\n  additionalProp,\n  ...props\n}) => <Interactive {...props} as={MyComponent} />;\n\n// as={Component} with ref\nconst ComposeAsComponentWithRef = React.forwardRef<\n  React.ElementRef<typeof MyComponent>,\n  ComposeAsComponentProps\n>(({ additionalProp, ...props }, ref) => (\n  <Interactive {...props} as={MyComponent} ref={ref} />\n));\n\n// type for props with ref, use for typing props passed to ComposeAsComponentWithRef\ntype ComposeAsComponentWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsComponentWithRef\n>;\nconst propsForComposeAsComponentWithRef: ComposeAsComponentWithRefProps = {\n  additionalProp: 'something',\n  someMyComponentProp: 'something else',\n  children: 'propsForComposeAsTagNameWithRef',\n  ref: () => {},\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsComponent: React.VFC = () => (\n  <>\n    <ComposeAsComponentWithoutRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      // ref={(element) => {}} // should error\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithoutRef\n    </ComposeAsComponentWithoutRef>\n    <ComposeAsComponentWithRef\n      additionalProp=\"something\"\n      someMyComponentProp=\"something else\"\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsComponentWithRef\n    </ComposeAsComponentWithRef>\n    <ComposeAsComponentWithRef {...propsForComposeAsComponentWithRef} />\n    <Interactive\n      as={MyComponent}\n      someMyComponentProp=\"something else\"\n      hoverStyle={{ fontWeight: 'bold' }}\n      ref={(element: React.ElementRef<typeof MyComponent> | null) => {}}\n    >\n      Interactive-as-MyComponent\n    </Interactive>\n  </>\n);\n\n////////////////////////////////////\n// composing as a union with ref\n// this example is a union of an Anchor element and React Router's <Link> component\n// when an href prop is passed to the composed component, an Anchor element is rendered\n// when a to prop is passed to the composed component, a <Link> component is rendered\n\ntype ComposeAsUnionProps =\n  | (InteractiveExtendableProps<typeof Link> & { href?: never })\n  | (InteractiveExtendableProps<'a'> & { to?: never; replace?: never });\n\nconst ComposeAsUnionWithRef = React.forwardRef<\n  HTMLAnchorElement,\n  ComposeAsUnionProps\n>((props, ref) => {\n  // React Router's <Link> component doesn't have a disabled state\n  // so when disabled always render as=\"a\" and remove router specific props\n  const As = props.to && !props.disabled ? Link : 'a';\n  let passThroughProps = props;\n  if (props.disabled) {\n    const { to, replace, ...propsWithoutRouterProps } = props;\n    passThroughProps = propsWithoutRouterProps;\n  }\n\n  return <Interactive {...passThroughProps} as={As} ref={ref} />;\n});\n\ntype ComposeAsUnionWithRefProps = React.ComponentPropsWithRef<\n  typeof ComposeAsUnionWithRef\n>;\nconst propsForComposeAsUnionWithRef: ComposeAsUnionWithRefProps = {\n  ref: (element) => {},\n  href: 'https://rafgraph.dev',\n  // to: '/some-path', // should error\n  children: 'propsForComposeAsUnionWithRef',\n  hoverStyle: { fontWeight: 'bold' },\n};\n\nconst DemoComposeAsUnionWithRef: React.VFC = () => (\n  <>\n    <ComposeAsUnionWithRef\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      // href=\"https://rafgraph.dev\" // should error\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-RouterLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      disabled\n      to=\"/some-path\"\n      replace // replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n      disabledStyle={{ opacity: 0.5 }}\n    >\n      ComposeAsUnionWithRef-RouterLink-disabled\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef\n      href=\"https://rafgraph.dev\"\n      // to=\"/some-path\" // should error b/c to is a Router Link prop\n      // replace // should error b/c replace is a Router Link prop\n      ref={(element) => {}}\n      hoverStyle={{ fontWeight: 'bold' }}\n    >\n      ComposeAsUnionWithRef-AnchorLink\n    </ComposeAsUnionWithRef>\n    <ComposeAsUnionWithRef {...propsForComposeAsUnionWithRef} />\n  </>\n);\n\n////////////////////////////////////\n\nconst ContainerDiv = styled('div', {\n  '&>*': {\n    display: 'block',\n  },\n  '&>h1': {\n    fontSize: '20px',\n  },\n});\n\nexport const TypeScriptExamples: React.VFC = () => (\n  <BrowserRouter>\n    <ContainerDiv>\n      <h1>TypeScript Examples</h1>\n      <DemoCreateInteractiveAs />\n      <DemoPropsForInteractive />\n      <DemoComposeAsTagName />\n      <DemoComposeAsComponent />\n      <DemoComposeAsUnionWithRef />\n    </ContainerDiv>\n  </BrowserRouter>\n);\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { globalCss } from './stitches.config';\nimport { App } from './App';\nimport { DisabledEdgeCase } from './other/DisabledEdgeCase';\nimport { PageJumpEdgeCase } from './other/PageJumpEdgeCase';\nimport { TypeScriptExamples } from './other/TypeScriptExamples';\n\nexport const Index = () => {\n  globalCss();\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/disabled-edge-case\" component={DisabledEdgeCase} />\n        <Route path=\"/page-jump-edge-case\" component={PageJumpEdgeCase} />\n        <Route path=\"/typescript\" component={TypeScriptExamples} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}